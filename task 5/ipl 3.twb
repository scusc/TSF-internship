<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='deliveries (deliveries)' inline='true' name='federated.0rr4ioz0l674v718y68ak0svavhk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deliveries' name='excel-direct.0l6gep51pu8voz11mlfsf0e4yko7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/Downloads/Indian Premier League/deliveries.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0l6gep51pu8voz11mlfsf0e4yko7' name='deliveries' table='[deliveries$]' type='table'>
          <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='match_id' ordinal='0' />
            <column datatype='integer' name='inning' ordinal='1' />
            <column datatype='string' name='batting_team' ordinal='2' />
            <column datatype='string' name='bowling_team' ordinal='3' />
            <column datatype='integer' name='over' ordinal='4' />
            <column datatype='integer' name='ball' ordinal='5' />
            <column datatype='string' name='batsman' ordinal='6' />
            <column datatype='string' name='non_striker' ordinal='7' />
            <column datatype='string' name='bowler' ordinal='8' />
            <column datatype='integer' name='is_super_over' ordinal='9' />
            <column datatype='integer' name='wide_runs' ordinal='10' />
            <column datatype='integer' name='bye_runs' ordinal='11' />
            <column datatype='integer' name='legbye_runs' ordinal='12' />
            <column datatype='integer' name='noball_runs' ordinal='13' />
            <column datatype='integer' name='penalty_runs' ordinal='14' />
            <column datatype='integer' name='batsman_runs' ordinal='15' />
            <column datatype='integer' name='extra_runs' ordinal='16' />
            <column datatype='integer' name='total_runs' ordinal='17' />
            <column datatype='string' name='player_dismissed' ordinal='18' />
            <column datatype='string' name='dismissal_kind' ordinal='19' />
            <column datatype='string' name='fielder' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0l6gep51pu8voz11mlfsf0e4yko7' name='deliveries' table='[deliveries$]' type='table'>
          <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='match_id' ordinal='0' />
            <column datatype='integer' name='inning' ordinal='1' />
            <column datatype='string' name='batting_team' ordinal='2' />
            <column datatype='string' name='bowling_team' ordinal='3' />
            <column datatype='integer' name='over' ordinal='4' />
            <column datatype='integer' name='ball' ordinal='5' />
            <column datatype='string' name='batsman' ordinal='6' />
            <column datatype='string' name='non_striker' ordinal='7' />
            <column datatype='string' name='bowler' ordinal='8' />
            <column datatype='integer' name='is_super_over' ordinal='9' />
            <column datatype='integer' name='wide_runs' ordinal='10' />
            <column datatype='integer' name='bye_runs' ordinal='11' />
            <column datatype='integer' name='legbye_runs' ordinal='12' />
            <column datatype='integer' name='noball_runs' ordinal='13' />
            <column datatype='integer' name='penalty_runs' ordinal='14' />
            <column datatype='integer' name='batsman_runs' ordinal='15' />
            <column datatype='integer' name='extra_runs' ordinal='16' />
            <column datatype='integer' name='total_runs' ordinal='17' />
            <column datatype='string' name='player_dismissed' ordinal='18' />
            <column datatype='string' name='dismissal_kind' ordinal='19' />
            <column datatype='string' name='fielder' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10001:no:A1:U10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>130</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>130</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>130</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_super_over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_super_over]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>is_super_over</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wide_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wide_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>wide_runs</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bye_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>bye_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbye_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>legbye_runs</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noball_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noball_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>noball_runs</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>penalty_runs</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>130</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='deliveries' datatype='table' name='[__tableau_internal_object_id__].[deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='Bye Runs' datatype='integer' name='[bye_runs]' role='measure' type='quantitative' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
      <column caption='Is Super Over' datatype='integer' name='[is_super_over]' role='measure' type='quantitative' />
      <column caption='Legbye Runs' datatype='integer' name='[legbye_runs]' role='measure' type='quantitative' />
      <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column caption='Noball Runs' datatype='integer' name='[noball_runs]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Penalty Runs' datatype='integer' name='[penalty_runs]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deliveries' id='deliveries_6A3964F8E2EF4C0DBC9EF9792EA591F7'>
            <properties context=''>
              <relation connection='excel-direct.0l6gep51pu8voz11mlfsf0e4yko7' name='deliveries' table='[deliveries$]' type='table'>
                <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='integer' name='inning' ordinal='1' />
                  <column datatype='string' name='batting_team' ordinal='2' />
                  <column datatype='string' name='bowling_team' ordinal='3' />
                  <column datatype='integer' name='over' ordinal='4' />
                  <column datatype='integer' name='ball' ordinal='5' />
                  <column datatype='string' name='batsman' ordinal='6' />
                  <column datatype='string' name='non_striker' ordinal='7' />
                  <column datatype='string' name='bowler' ordinal='8' />
                  <column datatype='integer' name='is_super_over' ordinal='9' />
                  <column datatype='integer' name='wide_runs' ordinal='10' />
                  <column datatype='integer' name='bye_runs' ordinal='11' />
                  <column datatype='integer' name='legbye_runs' ordinal='12' />
                  <column datatype='integer' name='noball_runs' ordinal='13' />
                  <column datatype='integer' name='penalty_runs' ordinal='14' />
                  <column datatype='integer' name='batsman_runs' ordinal='15' />
                  <column datatype='integer' name='extra_runs' ordinal='16' />
                  <column datatype='integer' name='total_runs' ordinal='17' />
                  <column datatype='string' name='player_dismissed' ordinal='18' />
                  <column datatype='string' name='dismissal_kind' ordinal='19' />
                  <column datatype='string' name='fielder' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='matches (Multiple Connections)' inline='true' name='federated.1pqu40e1fjlype19ve43m1q6txnh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='matches' name='excel-direct.00z1fnj0v5tult146sn5902s7shf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/Downloads/Indian Premier League/matches.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.00z1fnj0v5tult146sn5902s7shf' name='matches' table='[matches$]' type='table'>
          <columns gridOrigin='A1:R757:no:A1:R757:0' header='yes' outcome='6'>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='integer' name='season' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='string' name='team1' ordinal='4' />
            <column datatype='string' name='team2' ordinal='5' />
            <column datatype='string' name='toss_winner' ordinal='6' />
            <column datatype='string' name='toss_decision' ordinal='7' />
            <column datatype='string' name='result' ordinal='8' />
            <column datatype='integer' name='dl_applied' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='integer' name='win_by_runs' ordinal='11' />
            <column datatype='integer' name='win_by_wickets' ordinal='12' />
            <column datatype='string' name='player_of_match' ordinal='13' />
            <column datatype='string' name='venue' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
            <column datatype='string' name='umpire3' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.00z1fnj0v5tult146sn5902s7shf' name='matches' table='[matches$]' type='table'>
          <columns gridOrigin='A1:R757:no:A1:R757:0' header='yes' outcome='6'>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='integer' name='season' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='string' name='team1' ordinal='4' />
            <column datatype='string' name='team2' ordinal='5' />
            <column datatype='string' name='toss_winner' ordinal='6' />
            <column datatype='string' name='toss_decision' ordinal='7' />
            <column datatype='string' name='result' ordinal='8' />
            <column datatype='integer' name='dl_applied' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='integer' name='win_by_runs' ordinal='11' />
            <column datatype='integer' name='win_by_wickets' ordinal='12' />
            <column datatype='string' name='player_of_match' ordinal='13' />
            <column datatype='string' name='venue' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
            <column datatype='string' name='umpire3' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R757:no:A1:R757:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>130</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>130</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>130</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>130</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>130</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches_2F73FD01C3CD48BDAFFA66DF71C28503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='is maxi?' datatype='boolean' name='[Calculation_1147010592673910785]' role='measure' type='nominal'>
        <calculation class='tableau' formula='count([winner])=WINDOW_MAX(COUNT([winner])&#13;&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='is toss winner?' datatype='boolean' name='[Calculation_1147010592677711877]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[winner]=[toss_winner]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='matches' datatype='table' name='[__tableau_internal_object_id__].[matches_2F73FD01C3CD48BDAFFA66DF71C28503]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[winner]' derivation='Max' name='[max:winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1147010592677711877]' derivation='None' name='[none:Calculation_1147010592677711877:nk]' pivot='key' type='nominal' />
      <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Season,Winner)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:season:qk]' />
          <groupfilter function='level-members' level='[none:winner:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Season,Winner)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:season:qk]' />
          <groupfilter function='level-members' level='[none:winner:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:toss_decision:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;field&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1147010592677711877:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='matches' id='matches_2F73FD01C3CD48BDAFFA66DF71C28503'>
            <properties context=''>
              <relation connection='excel-direct.00z1fnj0v5tult146sn5902s7shf' name='matches' table='[matches$]' type='table'>
                <columns gridOrigin='A1:R757:no:A1:R757:0' header='yes' outcome='6'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='integer' name='season' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='string' name='team1' ordinal='4' />
                  <column datatype='string' name='team2' ordinal='5' />
                  <column datatype='string' name='toss_winner' ordinal='6' />
                  <column datatype='string' name='toss_decision' ordinal='7' />
                  <column datatype='string' name='result' ordinal='8' />
                  <column datatype='integer' name='dl_applied' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='win_by_runs' ordinal='11' />
                  <column datatype='integer' name='win_by_wickets' ordinal='12' />
                  <column datatype='string' name='player_of_match' ordinal='13' />
                  <column datatype='string' name='venue' ordinal='14' />
                  <column datatype='string' name='umpire1' ordinal='15' />
                  <column datatype='string' name='umpire2' ordinal='16' />
                  <column datatype='string' name='umpire3' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='max wins by teams yearly'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <column caption='is maxi?' datatype='boolean' name='[Calculation_1147010592673910785]' role='measure' type='nominal'>
              <calculation class='tableau' formula='count([winner])=WINDOW_MAX(COUNT([winner])&#13;&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1147010592673910785]' derivation='User' name='[usr:Calculation_1147010592673910785:nk:5]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:winner:nk]' />
              <groupfilter function='member' level='[none:winner:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1pqu40e1fjlype19ve43m1q6txnh].[usr:Calculation_1147010592673910785:nk:5]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:winner:qk]' />
              <color column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[usr:Calculation_1147010592673910785:nk:5]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]</rows>
        <cols>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:season:qk]</cols>
      </table>
      <simple-id uuid='{0FFC1EC2-E293-4E89-9195-F1F7BFD1B948}' />
    </worksheet>
    <worksheet name='runs description'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <column-instance column='[win_by_runs]' derivation='Avg' name='[avg:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_runs]' derivation='Count' name='[cnt:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_runs]' derivation='Max' name='[max:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_runs]' derivation='Min' name='[min:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance aggregation-param='25' column='[win_by_runs]' derivation='Percentile' name='[prc25:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance aggregation-param='50' column='[win_by_runs]' derivation='Percentile' name='[prc50:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance aggregation-param='75' column='[win_by_runs]' derivation='Percentile' name='[prc75:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_runs]' derivation='Stdev' name='[std:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:win_by_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[avg:win_by_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[std:win_by_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[min:win_by_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc25:win_by_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc50:win_by_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc75:win_by_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[max:win_by_runs:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:win_by_runs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[avg:win_by_runs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[std:win_by_runs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[min:win_by_runs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc25:win_by_runs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc50:win_by_runs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc75:win_by_runs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[max:win_by_runs:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1pqu40e1fjlype19ve43m1q6txnh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pqu40e1fjlype19ve43m1q6txnh].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{9E567087-05ED-4789-B510-7C85D5262D81}' />
    </worksheet>
    <worksheet name='teams and total wins'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:winner:nk]' />
              <groupfilter function='member' level='[none:winner:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:winner:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:winner:qk]</rows>
        <cols>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{E04E6C66-49CC-4F37-A02C-81E26FB23C3D}' />
    </worksheet>
    <worksheet name='top 10 bowlers'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries (deliveries)' name='federated.0rr4ioz0l674v718y68ak0svavhk' />
          </datasources>
          <datasource-dependencies datasource='federated.0rr4ioz0l674v718y68ak0svavhk'>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='Count' name='[cnt:dismissal_kind:qk]' pivot='key' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rr4ioz0l674v718y68ak0svavhk].[none:bowler:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bowler:nk]' member='&quot;A Mishra&quot;' />
              <groupfilter function='member' level='[none:bowler:nk]' member='&quot;B Kumar&quot;' />
              <groupfilter function='member' level='[none:bowler:nk]' member='&quot;DJ Bravo&quot;' />
              <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Harbhajan Singh&quot;' />
              <groupfilter function='member' level='[none:bowler:nk]' member='&quot;PP Chawla&quot;' />
              <groupfilter function='member' level='[none:bowler:nk]' member='&quot;R Ashwin&quot;' />
              <groupfilter function='member' level='[none:bowler:nk]' member='&quot;RA Jadeja&quot;' />
              <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SL Malinga&quot;' />
              <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SP Narine&quot;' />
              <groupfilter function='member' level='[none:bowler:nk]' member='&quot;UT Yadav&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0rr4ioz0l674v718y68ak0svavhk].[none:dismissal_kind:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:dismissal_kind:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:dismissal_kind:nk]' member='%null%' />
                <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;run out&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0rr4ioz0l674v718y68ak0svavhk].[none:dismissal_kind:nk]</column>
            <column>[federated.0rr4ioz0l674v718y68ak0svavhk].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0rr4ioz0l674v718y68ak0svavhk].[cnt:dismissal_kind:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rr4ioz0l674v718y68ak0svavhk].[none:bowler:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{4342179E-E632-4B1D-8946-37F11BE5DF65}' />
    </worksheet>
    <worksheet name='top 10 venues'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <_.fcp.ObjectModelTableType.false...column caption='matches' datatype='integer' name='[__tableau_internal_object_id__].[matches_2F73FD01C3CD48BDAFFA66DF71C28503]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches_2F73FD01C3CD48BDAFFA66DF71C28503]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches_2F73FD01C3CD48BDAFFA66DF71C28503:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches' datatype='table' name='[__tableau_internal_object_id__].[matches_2F73FD01C3CD48BDAFFA66DF71C28503]' role='measure' type='quantitative' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:venue:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Dr DY Patil Sports Academy&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Eden Gardens&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Feroz Shah Kotla&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Kingsmead&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;M Chinnaswamy Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;MA Chidambaram Stadium, Chepauk&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Maharashtra Cricket Association Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Punjab Cricket Association IS Bindra Stadium, Mohali&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Punjab Cricket Association Stadium, Mohali&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Rajiv Gandhi International Stadium, Uppal&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Sardar Patel Stadium, Motera&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Sawai Mansingh Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Subrata Roy Sahara Stadium&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;SuperSport Park&quot;' />
              <groupfilter function='member' level='[none:venue:nk]' member='&quot;Wankhede Stadium&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:venue:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pqu40e1fjlype19ve43m1q6txnh].[__tableau_internal_object_id__].[cnt:matches_2F73FD01C3CD48BDAFFA66DF71C28503:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:venue:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:venue:nk]</rows>
        <cols>[federated.1pqu40e1fjlype19ve43m1q6txnh].[__tableau_internal_object_id__].[cnt:matches_2F73FD01C3CD48BDAFFA66DF71C28503:qk]</cols>
      </table>
      <simple-id uuid='{465D5091-E243-494D-BB09-C6340EFDA96F}' />
    </worksheet>
    <worksheet name='top players of matches'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <column-instance column='[player_of_match]' derivation='Count' name='[cnt:player_of_match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:player_of_match:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;AB de Villiers&quot;' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;CH Gayle&quot;' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;DA Warner&quot;' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;G Gambhir&quot;' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;MS Dhoni&quot;' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;RG Sharma&quot;' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;SK Raina&quot;' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;SR Watson&quot;' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;V Kohli&quot;' />
              <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;YK Pathan&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:player_of_match:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:player_of_match:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:player_of_match:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{A75E5D5B-E0F5-43E9-AC52-1D1FFF8581CF}' />
    </worksheet>
    <worksheet name='toss win and match win '>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <column caption='is toss winner?' datatype='boolean' name='[Calculation_1147010592677711877]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[winner]=[toss_winner]' />
            </column>
            <column-instance column='[Calculation_1147010592677711877]' derivation='Count' name='[cnt:Calculation_1147010592677711877:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1147010592677711877]' derivation='None' name='[none:Calculation_1147010592677711877:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1147010592677711877]' derivation='Count' name='[pcto:cnt:Calculation_1147010592677711877:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[winner]' derivation='Count' name='[pcto:cnt:winner:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1147010592677711877:nk]' />
              <groupfilter function='member' level='[none:Calculation_1147010592677711877:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='94' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1pqu40e1fjlype19ve43m1q6txnh].[pcto:cnt:Calculation_1147010592677711877:qk:2]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]' />
              <text column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:Calculation_1147010592677711877:qk]' />
              <lod column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[pcto:cnt:Calculation_1147010592677711877:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pqu40e1fjlype19ve43m1q6txnh].[pcto:cnt:winner:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{5AD2D8F2-28AF-4564-8125-9149E491B027}' />
    </worksheet>
    <worksheet name='toss winners'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:toss_winner:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
              <bucket>&quot;Pune Warriors&quot;</bucket>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[ctd:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:toss_winner:nk]</rows>
        <cols>[federated.1pqu40e1fjlype19ve43m1q6txnh].[ctd:id:qk]</cols>
      </table>
      <simple-id uuid='{CAFDCE8D-B772-429A-BCDC-E00803BD5D55}' />
    </worksheet>
    <worksheet name='wickets description'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <column-instance column='[win_by_wickets]' derivation='Avg' name='[avg:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_wickets]' derivation='Count' name='[cnt:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_wickets]' derivation='Max' name='[max:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_wickets]' derivation='Min' name='[min:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column-instance aggregation-param='25' column='[win_by_wickets]' derivation='Percentile' name='[prc25:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column-instance aggregation-param='50' column='[win_by_wickets]' derivation='Percentile' name='[prc50:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column-instance aggregation-param='75' column='[win_by_wickets]' derivation='Percentile' name='[prc75:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_wickets]' derivation='Stdev' name='[std:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:win_by_wickets:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[avg:win_by_wickets:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[std:win_by_wickets:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[min:win_by_wickets:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc25:win_by_wickets:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc50:win_by_wickets:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc75:win_by_wickets:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[max:win_by_wickets:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:win_by_wickets:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[avg:win_by_wickets:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[std:win_by_wickets:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[min:win_by_wickets:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc25:win_by_wickets:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc50:win_by_wickets:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[prc75:win_by_wickets:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pqu40e1fjlype19ve43m1q6txnh].[max:win_by_wickets:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1pqu40e1fjlype19ve43m1q6txnh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pqu40e1fjlype19ve43m1q6txnh].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{CD0519FB-CCFD-487E-A168-CA91324A5FF4}' />
    </worksheet>
    <worksheet name='winner toss decision'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <column caption='is toss winner?' datatype='boolean' name='[Calculation_1147010592677711877]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[winner]=[toss_winner]' />
            </column>
            <column-instance column='[Calculation_1147010592677711877]' derivation='Count' name='[cnt:Calculation_1147010592677711877:qk]' pivot='key' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1147010592677711877]' derivation='None' name='[none:Calculation_1147010592677711877:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='CountD' name='[pcto:ctd:id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:toss_decision:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1147010592677711877:nk]' />
              <groupfilter function='member' level='[none:Calculation_1147010592677711877:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
              <bucket>&quot;Pune Warriors&quot;</bucket>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1pqu40e1fjlype19ve43m1q6txnh].[pcto:ctd:id:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1pqu40e1fjlype19ve43m1q6txnh].[ctd:id:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]' />
              <lod column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:Calculation_1147010592677711877:qk]' />
              <lod column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[ctd:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pqu40e1fjlype19ve43m1q6txnh].[pcto:ctd:id:qk]</rows>
        <cols>([federated.1pqu40e1fjlype19ve43m1q6txnh].[none:toss_decision:nk] / [federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk])</cols>
      </table>
      <simple-id uuid='{725512E3-1251-44CF-AD0D-F29BB21E7481}' />
    </worksheet>
    <worksheet name='wins against other teams'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
            <column-instance column='[team2]' derivation='None' name='[none:team2:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Chennai Super Kings&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Deccan Chargers&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Delhi Capitals&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Delhi Daredevils&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Gujarat Lions&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Kings XI Punjab&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Kochi Tuskers Kerala&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Kolkata Knight Riders&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Mumbai Indians&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Pune Warriors&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Rajasthan Royals&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Rising Pune Supergiant&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Rising Pune Supergiants&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Royal Challengers Bangalore&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Sunrisers Hyderabad&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:winner:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1pqu40e1fjlype19ve43m1q6txnh].[none:team1:nk] / [federated.1pqu40e1fjlype19ve43m1q6txnh].[none:team2:nk])</rows>
        <cols>[federated.1pqu40e1fjlype19ve43m1q6txnh].[cnt:winner:qk]</cols>
      </table>
      <simple-id uuid='{93CFA125-E75C-4455-A4EB-FC9717FDD95E}' />
    </worksheet>
    <worksheet name='yearly matches'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches (Multiple Connections)' name='federated.1pqu40e1fjlype19ve43m1q6txnh' />
          </datasources>
          <datasource-dependencies datasource='federated.1pqu40e1fjlype19ve43m1q6txnh'>
            <_.fcp.ObjectModelTableType.false...column caption='matches' datatype='integer' name='[__tableau_internal_object_id__].[matches_2F73FD01C3CD48BDAFFA66DF71C28503]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches_2F73FD01C3CD48BDAFFA66DF71C28503]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches_2F73FD01C3CD48BDAFFA66DF71C28503:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches' datatype='table' name='[__tableau_internal_object_id__].[matches_2F73FD01C3CD48BDAFFA66DF71C28503]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pqu40e1fjlype19ve43m1q6txnh].[yr:date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pqu40e1fjlype19ve43m1q6txnh].[__tableau_internal_object_id__].[cnt:matches_2F73FD01C3CD48BDAFFA66DF71C28503:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1pqu40e1fjlype19ve43m1q6txnh].[__tableau_internal_object_id__].[cnt:matches_2F73FD01C3CD48BDAFFA66DF71C28503:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1pqu40e1fjlype19ve43m1q6txnh].[__tableau_internal_object_id__].[cnt:matches_2F73FD01C3CD48BDAFFA66DF71C28503:qk]</rows>
        <cols>[federated.1pqu40e1fjlype19ve43m1q6txnh].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{15B526A7-0EBB-4A97-AB6B-D8FA7BCB552A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1700' minheight='900' minwidth='1700' sizing-mode='fixed' />
      <zones>
        <zone h='33333' id='3' name='wickets description' w='33294' x='941' y='4889' />
        <zone h='33333' id='4' name='runs description' w='33294' x='24647' y='4889' />
        <zone h='48111' id='5' name='yearly matches' w='43765' x='706' y='48444' />
        <zone h='47556' id='6' name='top 10 venues' w='46882' x='50412' y='556' />
        <zone h='48111' id='7' name='teams and total wins' w='45941' x='50235' y='48667' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='9' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='8' param='vert' w='99058' x='471' y='889'>
                <zone fixed-size='280' h='47556' id='6' is-fixed='true' name='top 10 venues' w='46882' x='50412' y='556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33333' id='3' is-fixed='true' name='wickets description' w='33294' x='941' y='4889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33333' id='4' is-fixed='true' name='runs description' w='33294' x='24647' y='4889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48111' id='5' is-fixed='true' name='yearly matches' w='43765' x='706' y='48444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48111' id='7' is-fixed='true' name='teams and total wins' w='45941' x='50235' y='48667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5AD09105-2237-4006-A489-4500DAF9E56F}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='900' maxwidth='1700' minheight='900' minwidth='1700' sizing-mode='fixed' />
      <zones>
        <zone h='99333' id='3' name='wins against other teams' w='41941' x='471' y='1111' />
        <zone h='33333' id='4' name='top players of matches' w='13176' x='47765' y='4778' />
        <zone h='49444' id='5' name='max wins by teams yearly' w='35235' x='46647' y='43556' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6444' id='6' name='max wins by teams yearly' pane-specification-id='0' param='[federated.1pqu40e1fjlype19ve43m1q6txnh].[usr:Calculation_1147010592673910785:nk:5]' w='8235' x='86765' y='47556' />
        <zone h='33333' id='7' name='top 10 bowlers' w='13471' x='77412' y='7333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='9' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='8' param='vert' w='99058' x='471' y='889'>
                <zone fixed-size='280' h='99333' id='3' is-fixed='true' name='wins against other teams' w='41941' x='471' y='1111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33333' id='4' is-fixed='true' name='top players of matches' w='13176' x='47765' y='4778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33333' id='7' is-fixed='true' name='top 10 bowlers' w='13471' x='77412' y='7333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49444' id='5' is-fixed='true' name='max wins by teams yearly' w='35235' x='46647' y='43556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6444' id='6' name='max wins by teams yearly' pane-specification-id='0' param='[federated.1pqu40e1fjlype19ve43m1q6txnh].[usr:Calculation_1147010592673910785:nk:5]' w='8235' x='86765' y='47556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BBFF4720-D206-4534-BA91-7F3FAB9ABF7F}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='1000' maxwidth='1700' minheight='1000' minwidth='1700' sizing-mode='fixed' />
      <zones>
        <zone h='44900' id='3' name='toss winners' w='40059' x='56412' y='40300' />
        <zone h='32300' id='4' name='toss win and match win ' w='33176' x='55765' y='4300' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='5800' id='5' name='toss win and match win ' pane-specification-id='0' param='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]' w='8235' x='89588' y='6400' />
        <zone h='81600' id='6' name='winner toss decision' w='49588' x='1471' y='2700' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='8' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98400' id='7' param='vert' w='99058' x='471' y='800'>
                <zone fixed-size='280' h='81600' id='6' is-fixed='true' name='winner toss decision' w='49588' x='1471' y='2700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32300' id='4' is-fixed='true' name='toss win and match win ' w='33176' x='55765' y='4300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='5800' id='5' name='toss win and match win ' pane-specification-id='0' param='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]' w='8235' x='89588' y='6400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44900' id='3' is-fixed='true' name='toss winners' w='40059' x='56412' y='40300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4C7495C4-2909-4759-885E-AA5309F968BF}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='wickets description'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{52A77400-FD19-47FE-BF71-91A2A4FBD923}' />
    </window>
    <window class='worksheet' name='runs description'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{92F9AEA5-2E4C-4A14-9378-0D4008A12A4A}' />
    </window>
    <window class='worksheet' name='yearly matches'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5124BBC5-017A-458F-AFA7-37ACD5AC0765}' />
    </window>
    <window class='worksheet' name='top 10 venues'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{69CA2EE3-DD8B-4998-9615-3F3BBE569689}' />
    </window>
    <window class='worksheet' name='teams and total wins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{98EF2AFC-B126-46E1-9E9E-08E3F64CBA74}' />
    </window>
    <window class='worksheet' name='wins against other teams'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5E39F8F0-D06C-4423-AA75-75EE724567CE}' />
    </window>
    <window class='worksheet' name='top players of matches'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[:Measure Names]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:player_of_match:nk]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:season:qk]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:team1:nk]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:toss_winner:nk]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7C5C278-A9FE-42BE-8F69-F17A5A55BB84}' />
    </window>
    <window class='worksheet' name='max wins by teams yearly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pqu40e1fjlype19ve43m1q6txnh].[usr:Calculation_1147010592673910785:nk:5]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:id:ok]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:season:qk]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:team1:nk]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[usr:Calculation_1147010592673017856:nk]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[usr:Calculation_1147010592673910785:nk:5]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08CD6561-E75D-479F-86B3-F80EDDA1EA9E}' />
    </window>
    <window class='worksheet' name='toss winners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:id:ok]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:toss_winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C63864D5-81B2-4456-A189-16727B0BD270}' />
    </window>
    <window class='worksheet' name='winner toss decision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:id:ok]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5216E89-C44C-4F53-AD31-98006EEBB4E0}' />
    </window>
    <window class='worksheet' name='toss win and match win '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]</field>
            <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A99F5D2-AC47-4BFE-B3CF-000B8A581F84}' />
    </window>
    <window class='worksheet' name='top 10 bowlers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rr4ioz0l674v718y68ak0svavhk].[none:bowler:nk]</field>
            <field>[federated.0rr4ioz0l674v718y68ak0svavhk].[none:dismissal_kind:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F34EBA95-8FF1-4690-AC7E-8B4F5EC6C462}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='runs description' />
        <viewpoint name='teams and total wins'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='top 10 venues' />
        <viewpoint name='wickets description' />
        <viewpoint name='yearly matches'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{543A573B-4BE7-4F96-8170-CF43C7CAE92A}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='max wins by teams yearly'>
          <highlight>
            <color-one-way>
              <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[usr:Calculation_1147010592673910785:nk:5]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='top 10 bowlers' />
        <viewpoint name='top players of matches' />
        <viewpoint name='wins against other teams'>
          <highlight field='[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:winner:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7CE4B242-B3B3-4E8C-8CBB-F69ABF72A76E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='toss win and match win '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1pqu40e1fjlype19ve43m1q6txnh].[none:Calculation_1147010592677711877:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='toss winners' />
        <viewpoint name='winner toss decision'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{94952613-A459-46D9-A5E6-ED7FC754B44A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      2v8H9b9m09DTmk8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='max wins by teams yearly' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='runs description' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACkCAYAAADBuSFLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2de1hU1f7wP+cHcRSTU1AiWogoMFxEkFFBYxuioKKiQnIUk5Lj8faWppYp
      HX3NSE3zkllpYcEJy4xOZOgBFXQQhBjCQ1wGMAQKRRTtR4Eemnl5/5gBBrkNDJY5+/M8Po8z
      s/daa69Z33XZ7DWfPzU2NjYiImKg/M/vXQARkd8TMQBEDBoxAEQMGjEARAwaMQBEDBoxAEQM
      GjEARAwa464OkMvlv0U5RER+F/4k/iFMxJARp0AiBo0YACIGjRgAIgaNGAAihotsk74BoORK
      8lYW+XkjlUrx9lvEvuy63ilcb6MsJW7tLLylUqSbZC3vl0cTKl3D8eZiK0mOkCL12kJ680Gl
      HArxYpNM2ePsZZukSKUt/7z9FrExoZTupFgeHaqVhhc+wWs5UtzQ4zIZPMJm/QKgVraFZyIU
      eGyPJ0Mu5/THyxn23596q3htKI8Obd14u0Fd0n62XplGVLoc+Wah5YMhLriZ5ZCvaHqjmMLC
      iUwcl4eitOlkBfnfu+HqbAyUEx0qJTS6vNtlcHguDrlcjlyeQfxmB/I27SC+ppuJBOxSp5Fx
      mndm13Fg6S6+6XlcGjx6BMB/iIpMwuUf+1jhbo4xYDJAyrRxg3utcL3J9WtVMFyCvcmdn0hw
      dq8lT1GpfllTSJ7lWIKdIV+hGRYU+eRYueBoATCEsFg5sWFD9CiNMeZeXoygll9+6WkSpjiG
      zsO7No2sYj2KYuD0PADKLyCvcWPcWLN2P679ZnfL1GjWWqJzazWfyNgk3URLP679Wt27rtwb
      zdpgH7ykUrzn7SO7Tj2FCNpXBAmr1VOA0Gju7IM7yrPNua1GkX44uzqQX1Ckno4UFXDVxZEx
      EhcuXVLnUKnI49YYd5y0ytiURHl0KNKVe4leG4yPlxSp97yup4EN1cj3R5HsPI0nh0Dt8TV4
      TdxBdvMB2eyYOIf9Bd2aIBEdGkrLwNT6tWyTlJDIQ2xd5Ie3VIrX9FXEl7fU29M+XkilUrx8
      gtl8qrvD0h+XngfA7VvUM4BHLdr57Goc61bKGbk9ngx5BvHP9+PwktdI1HF5UG/qwZqYk5xP
      f5/Zv0TzVTYIm+XEPefQMgWIDaNVH9xJnm3O1Z4CAUNc3DDLLaQYKFXk4ehoDw5OWOYVUgOU
      lxbj5uTQWYHxWBPDyfPpvD/7F6K/ym73sKJ9QeoAHDeNTXm+7NkXwhDAzC+EQE5wsmkuk53M
      CatApjt18od65Q1y9keRZD0FH3sdKhWovzWIp/Z8TWpGEi8NO8dnZ8qBYj7Zloz7rrPI5XLO
      xm9j5iDd0rsf6HkA9OmLKdVca6ezqMtOJ2tcKH9zN8cYY8wnLmK+bTLp7beLNgxycMHK1BhM
      zLFof4Dp3TwlzrhfyaOwpg5Ffh+cHIzBwhGXqwUUUYoi7xFcHNuL9OYC42JlijEmmHdS4OY1
      QIaMD8J/5q2A54i7ChiPYV6YFfGfn6YOyE4+ge3MKbQ7yWoaxTwDWJ3hxpsfLKGzONHGzM6R
      4WYmYGyOxUNN7w7GZvh1/rV5Fa+89xlZFWY4O3VyrfcZPQ+AIS64mV0gPbO262Pvdfo54+pQ
      RGmZgvxSFySDAYYwdGgeilwF+d+74qhjL6sTxqZYSacz0TqLzAu3ARgSvBDv86c5V/sNJ09J
      eWq6ZfvnBuxCnvEZ673MMLFyYKiZjq2/Q/rh//ppYl6Zit2tb3jvuSDm7M7u1t2pPzJ6LII9
      WLJ2HOl7I4jOuYESaKiWczy9kn4e4xidHssHOTdQouRG8iEOl05knEfTuZX8UKmEhmryjp0m
      V8ccH3zQDC4qKG4AlMpWX1LXeXbGEFzcIC8piTxbZyTqFJE4Q35cJjmjRzFS33bWCiX1hadJ
      LrXAamAfzQX4Ehwg5+imT8j0Cca3XyenG9sStPtdFtZs5ZkNx7nSXBFX+KGyAZT1XEr9mowr
      upSlCNmJUvo4TSXshW3sfX4UVRcUXNXr+v446HUb1Gzadr5YN4iz6wLxlErxXfAO3//5IbAM
      YvteKf9ZF4in1JPAt+qYf+AV/PsBuOEbdJ33Aj3xnv4yx/oMp5PZdSsspvyNsP/5hLBxUryW
      xLX+kjrNs2skzu7kx8Vx21lC0ym2EhfSExLo5+JIb0wKmtcAUk98lx/n0VX7WDGy6VNjxswJ
      4Ubqfxg7cVTXj+ka2xJ6IJr5V7fwzJZkbigH4z3NntNrxuE1eSH7Swdh96guperDraxdhPl7
      IpV6Evjuz4SumMG9eS+v9xGfBr1nUHIjeQvz3h7Evi+W0JszLpGOER+FuCeQsUnqScCu/+Xv
      O8PFxv8bIo4AIgaNOAKIGDRiAIgYNF3ebKivr/8tyiEi8rsgjgAiBo0YACIGjRgAIgaNGAAi
      Bo0YACIGjf4BUJ/EBkFAEFZ1f3ufzqhIi/Rl7kFFy1tlMYQJAkuOXG456uxmhPBYKnqaTUUs
      4YKA0PTPN4AFq6PI7s4Dr3ek4RuwgIi4i4g7d+9N9A6A+nNnOPfEEpaM+pbM7Lt1y9QIicsI
      qgqKaIqx+mIFfSZM4KaiBJXmvZKifMxcnbAGSItEECJJ63Ze/myVyZDJZMhOHCSw8TCbPszp
      YRopHNs1k7oPV/F2tqrr00R+c/QMABU5WZmMGjsF79F2ZGblcLe+ZgsHJwZ+p6BE87qo8BJO
      sybhnF+kea+GooIqXB01z5aOj0Ami2C8PpmaDGas1IbaX3oa2EaYOszlKa9aMrJLuj5c5DdH
      vwBQXSDz/GOMGmmBtZMrfZPPkKGJgIrYcIQNSTQ3nYpYwn0jSVMBtXnERszDTxAQ/AJZtno5
      a2O7mLjYOTOSAorLAC5TXDAUR0c7JA+XUVEPUILiO0dGupiqj0+L1JoOpREphLEjZifLAv0Q
      BF+C1yV0MVVSUV9+nPeP1hDg6w61SWzwnc5ercEgZ+905h9UdC/o0yIRItPaf50WiRC2g5id
      ywj0ExB8g1mXoCmlqoz4pjoT/Ahc9jFiSOmPfgGQe45kRjHCBnCV4sV55JrdLdbeE7HLTOW8
      JgIqUpO5GjAFT6N6Tu9YydH/eZoPT8mQJR3lqQfzuNlVXkYSXEZcQlFcD6oSFLcl2JsOwt7p
      EoVFwOVySvs6Yd/hftZb3LKawxtHk0iJX4Xt+S9IbTcCElkvCAiCD1OWfkL/5ft5wdMUzHwJ
      CoCTKdmaBp+D7KQlAVMkGHVYaBU3cw8Sk/wYkwS7rq5QU8xbWM15g6NJKcSvsuX8F6lUALfP
      RPHmr/M5kiJDlvIlBxe78WfdUhTpBL0CQJGVxi0vKa4ARu6MHltLWpZmoWo9mWmO6Zw5Xw9U
      kJp8lYkT3DAih4yzjzEnfBqDTQBM+LNO36QFDk4DyS0sgpIiipzssQEcHIdSUHwZVYmCQlfH
      TjbX9GeYgy39TcDoYXP+0uFxLWuAU59txiV1BXP35qDCCI/geVgmfMmZeiBHxkmbaUy2bi+N
      liAKXp+F6+v7CZd0HCatizkMB9v+mGDEw+YtpexjPZTHst/jpX+8TWxSEbcljrSbtUi30CMA
      FMhOVfFr4np8BAFBmMJr56DqlAx1CAzA28eR9DPnqa9IJfnqZHw8mhqBMUY9yNnOeSS3LlVQ
      UlTAAIm6RzW1tuGmooTConyGSuwx7fkFtcGkvy3TpozmRmYOpQDWs5k/LpMz52vJTknBffZU
      BrR7pj9bZSnErBlD/wcGYjfErJNRQkfsFvHRpzsIl/bl+5NvsHjWOhKq9U1UpOcBUJFNZtUT
      vPJvzR0TmQzZ5ytxrcokWzO1GPDkZEakZ/CvM8n8PNMfdwDskLiWkPx1LjdVoKov54cq3bI0
      krgw4jsF8YpqnBw0mxTtHHDOP0d8QT2jRtj0+HLapeEayWeyeGCQJeYAmPLkrCnk/Ot1jmYJ
      zHqys3AzwiZwO3vm3WDn0v9LUpXWSuFKJVdU0HCtgONn8nQqSk1OEvKfH2fUnHA2blvPjIdy
      yCvt+jyRzulxAFRnnafkiSd5QrsNDPDGx7WE81marsliMtPGJnLgg1tM8ZE0HcSstWsYmLqW
      QB9fZq48yvdaSVTEhnd8+9LCASeLBL5KcMChaUptZIfk4UQSv3XFUdfNxZ3SNH0RECaFsvfH
      ybweMaV5T7CRxwzm3Egnb/QE3Lrs1o2wCXmLg09Vs33pNs7eVMGIJ5lZ8wEhPn48tfE4fYbp
      tjboy2U+3/hXpgoCwtT1ZNo9T8hofa5TBHTYEXY3Hoe+VlnKAw8P4SFTIxqupbN/5es0roln
      tYfeE4W7jurmWbY9ewCrHYdZpOO6VuTepVd/7ENXfkrZwdqYfG7eBvoMxjtsG+v+AI0/LVJg
      ffIAvJ7fycti478v+F1GABGRewXxYTgRg0YMABGDRvxZFBGDRhwBRAwaMQBEDBoxAEQMGjEA
      RAwaMQBEDBr9NKm5LTI7L59glu9O1pI1dI1sUw90o7JN7Qry7jodeYaVMjZ5zWB/QctbpYdC
      kErDiK1sPojkiJ6pVZto7QjW1Pd739Cd7cqiZ7gtPQ+AukReWxLPo2viSNXI1WbfPoNM86X3
      qHHfw3ToGTZ2xtXtCnmFTbuV1Z6xiRNvUFDU1BsUU5hrhpvLEPTxDDdL/uRyzsYE0Rj9Mgd0
      9K61SUP0DAP6BMCPlyj5dQReXhpHsNlwJq9/lRB99Ln3MB17hi1wdLHiQkGR5rXaMxY8xZXc
      Qo3At6aQvCvuOEugdzzDYPL4ODxta/lFR/NmG0TPMKBPADzmhKtZEvu2nORSvXYXou7hVido
      KYGapgy1uUQ3TSO8Z7ErQ5eMasmNXsssbylSqTezWp2kpDSu6TMvfJ7ezTe1tDMtUSLb5NVl
      r9szzzDYjxgFeQr1pplKBXm2zjg7OGFeWkYdQFEBF5xHMbJfS/00JyHbhDQkkkNbF+HnLUXq
      NZ1V8V2MDsp6Lh3bz+Hrgfh79JZnWH2d2pem/bozz7CyNI61s9T1JvX2Y9GHRW0Tv0fpeQD0
      E/hHbCTjruxnoeCNz9MbOZJbS1MPtytASwu6WQDqSHxtCYf7rSAuXY485TBL3LvOpi7xNZYc
      7seKuHTk8hQOa52kzN7N86c82Hdajlx+lgM+F1jzWiJ1xuPw9bvO6VRN16ZM53SSMzOndNLr
      6uEZNnZ2xe37fBR1oCwqUHvGBktwKc1HAVReukhfF0nH3q36Wwx6ag9fp2aQ9NIwzn12pv01
      TrMiVeDZGDNWRq1jXL/f2zN8m9PvbeXXsHgy5HIyEqNZ7tFHtwTvAfRaBBtbTeSFd74kRfYF
      Oybd5NCS54jtsPPKJj3ZlvmLJjPABDA2pZ8Oe4Gz05Oxnb+IyeqTMNU6qThDRlXWm8weJ0Uq
      Hcf8d/K5VVnFdYwZFxDIT4kpFAPK9NMkOU/myQ7Mo6CnZ9jCERerHPIVUFxYiIvEFpDgbJuH
      olJJUUE+7s6Sjs83s8NxuBkmGGPeIvBtS/MaIJ2vto7kTPgMdmQrf2fPcB+GDrPmm7dW8vLu
      aE4U3MbJ6Y8zD+6V26DGplZIw9Yy3zafpHOVXZ/Qi5gFv0OGZmGobZA3HjURv58SSSlWkn46
      Cbepk+ik/euJPSNG3aK0rIjCPEvUUvl+2NjeoKCogMLcYThLdNRV6oQJZsNnMN2zhvNy9b7I
      388zDPZLPiV+31LG9C3hxGsL8X8h/g+jWe15AKTvY9WBVC7WNqDtvXVzUQ/0/R4040pxMTeU
      oFQqAQec3IpISiykXgkNtRcpv9xpDgA4OLlRlJRIofokLmqdZD96PMTv54DGU6ysv0Le+QL1
      r8cZj2Hy1J+QnYvldNI4ZkzpXHSqn2fYGGdXNy4UfEHBVReapPL2jq7kno0jr07KSFtd0tGd
      huqTnM54gMEDNZn1imcYKn+oREkD1XnHOK2TwLmG7OOZ1FqPZu7S19izaTYPyXNbbXO9l+l5
      AAz3xL3yQ5YHjEMq9cR/5TkkkR/xnMZ76zF3JaPyX8XPU4rPjmzAkqAN67E6/ncETy/8Vxzl
      olZy6nvUm5DdkY1l0AbWWx3n74InXv4rOKp1kvGY5exZ+igpqwPwlErxDniOd/Ju0TQD9QgI
      ovadfSR5+zGhuUHI2CRt5zaknp5hC0cXHomPI97RsdnyaOzghHlCAlnuTfJtPWmavkiljAva
      wQ9T3mRzQFNg6+sZBjffIK6/F4in93RePtaH4Trtse4DlZ/wcuAEpFIpE1an47A2lDF6Xehv
      h/g49H2D6BnuCeKjEPcFome4p4gjgIhBI44AIgaNGAAiBo3oCRYxaMQRQMSgEQNAxKARA0DE
      oBEDQMSgEQNAxKDRIwAqiA1X/47+hqTWd4rqkzaof19fH2dvK0RPsMjdQe8RwNffH3krPaqK
      nKwyFizw1zpKHSzhXZkgO0T0BIvcHfQOAOMnnmRClpyWJ2dzkeeNZbSz9lHWhEbJiArtudZN
      9ASL3A30XwMYuzPaKY0mOSSKLDJdNObIZtQjQIsOVyBsRww7lwXiJwj4Bq8joavBQfQEi57g
      u0AvLIJN8Rg7iEyNGa8iO5thnu5dWhFv3bJizhtHSUqJZ5Xteb5oX9rbgugJFj3Bd4FeuQtk
      4T4asnKooYacLAu8vbqWlfYf5oCtWtqLecfSXu1cRE+w6AnudXrnNqi1B2MvZ5J9LZtMxuLR
      m7JeLURPsOgJ7m166e8AEkaPL+D8wfPUjHan8923PUf0BIue4N6m1/4Q5i74kJWYj4eHfgOz
      6AluH9ETfHcQLZHdRPQE31+Ij0J0g7RIAZ/gfdQ++zphYuO/LxBHABGDRhwBRAwaMQBEDBrx
      Z1FEDBpxBBAxaMQAEDFoxAAQMWjEAOguylKiw8OJLu2pWU5JaXQY03dkY8BuunsGPQJA7bpq
      1m56+fD0xgR63C5+Y8qjQ9u4vrpGScGBtSSNjyDU1litGYpeS7CPVxuvGKi9WtpqU6k0lOhy
      Y2zDXuWpCxvYnd2Tyqrlm91P4+MlvUMXq/4+1hxvseYpkyOQSr3Ykt5ydumhELw2yXocfL2h
      a72X0HsECNilNrNknH4Hn/LXWLbvP71RLj2RsUkaSmsFgNoL0O02r83VePZ9OpyFIbbqn9RL
      388/ckbw8pGzyOXpHA5rJHrVAY2srpxLF1vqR/0vFrUccgihK3048W5c900qBf9kyzFrNiRk
      NNtw1AzBxc2MnPyWfdPFhYVMnDiOPEXTU3N1KPK/x83VGWM0AdqTCukNXes9Qq9NgYxNHVkY
      NpEa+YXfXmKtEwKb5XLu8Nt1i6tnTlAU0GJfue2xmi/3hCEdYAKY8PgoV6xqSymrAaikotSM
      BzsQbBiPmUnQ1SN82V1F6fVqrljZY2/e9lctJc7u1OYpUEuqaijMs2RssDPkK9S2ShTk51jh
      olHYCJvbCv+6i9661t+Zu7cGqP2G3U+rLfJS71msjSvVDLua3rm0lLhV0/HSDOPKK8ls1Tp+
      86kaTTK7eVprihGnmWOVR4ciXbmX6LXB6umA9zz2ZddBeTSh0tUkUMS+IPUwre7k2hsVtIvb
      fj4t1HDuzAXcNb0nQJ9+/bR+XLWW3C+TKHLwRGoB1P3ET79aMeCRjirICfcxV0jPautUU5bG
      sTZYXRdePk+zNfkKyqZrVvtnCZLeOQWCfs6uOOQXoPZzF6l1TWMkuFy6pD6uUkHerTG4O6mP
      byUzL48mVLqSvc1TOm/m7cum03Z9h65VWbCfOdJlxDX9cgE1xC3zYs3xe3eC1GsBoKwvJCY6
      GWvBiyFcJW7dThqWqy3yGfHP0+/gWqKae7takiO3URp0iLOxYQxRZrP7mQgUPu9wOkNORuK7
      LHTuo1aX7mxgeVwqco269ODaKJqTqTfFY00MJ8+n8/7sX4j+KhuGhBEr30UADjwXpx6mu+zk
      uspHfRBVP3Ygu2so5siq+aw4KeGNfaHqaclPN7neHIRe+AQsam7ITQy2tiW/+A6bljKb3cv2
      0xgaw1m5nLMHfFBErCCqGIaExSJX+2eJ0xICNjPEBTezXAqLgVIFeY6O2OOAk2UehTVAeSnF
      bk6d7Jqrx9RjDTEnz5P+/mx+if6Kdmc2HehajZ2CCXHL4sQpzcSu5gynLvgR6GfWYY6/N3or
      AhNWS0kA6GuO67RI9ofbQ91x0rNKOZvlx1GtYwOqQK0vqeOx0J286K2pmOIMZCYL2L7IUb2j
      y9iKoaZQdzydrNKzZPm1SoUqUH/xgxxwsVJvSjG3MIP/7dk11GV3nE+LbeU61VeMsb1jD4Cy
      NI4Xlu2k6olIPts5EaumGh0cSrQ8VHNQPVdStvPMSyswP/wFSzpTuBRnIDMJYvvsxzEBsF9E
      uN87HDhfzhL7rvSjEpzdr3CssIa6vvn0cfLHGAscXa4SVwTuijwecQnqZMPSIBxcrNTfgbkF
      Zh1VaMAuzdSpgdqLibwWPoP81xN40cOS6QsDOLDnS4pDlmBx5hRFgc8yTn8R5V1D76IF7Gqn
      h/0vgBsvJnxASLu2Tivsh+nYK7i9SMIHIW0Up72+zuggnxYeYYCVEpX2T0DUytiybCe182P5
      JMy248o0NsVq8iLmfxREaeuo6mX64ezqwM7SMhSU4jJRbewcMnQoeYpcFPnf4xrQm5k36Vo3
      s0deCh729BNCCdnzMinFs3joxFVCXhqjfyO7i9ydNUA/D8a4XeDQm8f4oQHUPUUqWR21WntP
      hIaP2X5IrVBV1l/h0pU6+nmMwe3CId489oP6l9UaarmYmqVD4+/Hg2ZXKC5WK0+VXdzz0y0f
      SwY+9j35ipZZceWxKBIeWcqr7TT+ylPvE516kVrN9VefPMThIgdstTrxyopSnO2HtVMXcUT9
      S12WhuJDRCVZI3jpJp8e4uIGeUkk5dnS5ObuJ3GG/Dgyc0YzamTvNsc2ulbsmRVizpF3t3GS
      EGbd48Kyu7QItiRoyxs8eX0f88dJkUp9CX79JDc6OtzYgxc+ikSSshxfTyme/suIyb8NlkFs
      eeNJru+bzzipFKlvMK+f7DAVLTyYu3IU+a/64Sn1YUdXt+h0yseCJ550Iyc3v3ke/31xfsuC
      tNW9frB0duF2/CsE+6ot9kH7rzH7rX2ENrfjAnK+sWLc6MFt6+LdFfwpdiETpFImLElBErmf
      cF0bksQZ9/w44m4707xcsZXgkp5AQr8Wh7FedKprBcvpTyHNSIXJT7Y7orZW4nagrf2NEJ8G
      7Q5X41gWnMmsf7+hsz+4I5TfbMPv4FA+6XTa9cekofgQi8MVzO+FerrbiI9CdAfLQJ7760Vi
      jpTq+RhDObF7U5i6LOg+a/zqv0aPCz+J25u6S8Z/T8QRoLsoS4leEgkRBwiz7cl8WklpdDjP
      Vz/Ply963NMLRENADAARg0acAokYNKImVcSgEUcAEYNGDAARg0YMABGDRgwAEYNGDIDuoioj
      dsUKYst6Kr1TURa7hOC9Od1TK4ncFXpFk9qkFF382r/pcbv4jamIDW/t6tIJFYqoDSSPfZG/
      2hjRpg4EodVPu6vK4omYp3aSBSzeydkqFWCETWgEs3M383ZOTyqrluz9iwnwvVNDqy6LtrJW
      dXYzguDL9oyWs8tiwvCNTOtx8Kl/vr61BnZ1VLbh7gn236rWCaUc24X3DztY9d53vVEuPUkj
      UgintZU1jUihRdTXI6q/5r3PhzE/2EZjfPmBshI7lnys0arKZC1mSlUOb696n8b5H3JKdoK9
      3iW8GvGppsFa89flAiejvqTbkhfFp2w/8RhrPk9BFhWqpUmyxsnVTK2Q0lBSVMSECWMpUJsF
      gXqKFZcY4aL2mqVFCj3oBAD/rc3Xe+JgII2HN9Ftk+w9Qq9NgYxMHQidL3Dj29xekmP3NuOJ
      kMmI0MObWp16kotTZtEshrn8IxX0b3/fb1YSX5nMZOGMwZhgwvDQvxNwNZ5/a/asG3lMY2Z1
      HF93V/VYc40qy+EMf7itncPB0ZXagmLU6vAaigoGIJ0lAUUx6nGhiMLcgc12nfERMmT6VAhg
      MngsUptaemyS/Z25i3uCs9m/OABfQUDwm0dEfJlm2NX0zmVlxK8LxlczjKuqzrJT6/itZzR7
      grP3szjAF0EQ8JsXQbxmjlURG47w0jvERixQTwf8nuVATr3G1L6eREo4sEA9TKs7ufZGBe3i
      tp9PCzWcT83F1cWxxfdV+7/c5FEeaecR44rvi/l1pDOSpjeMrBg8uIqyiqaWIsHV4yqZ315u
      c66qLJ6IBeq68A1YzM6zVaiarnl9IpQcYIFw5xQITCXO2BUqKFEBlKCodsLBwx6nsjL1cZeL
      KbjlgaumUGmRWvLyiljChZd4JzaCBQG+CIIfzx7IodN2raqn/Pj7HK0JwNcdVIqDzBdWEa+1
      Jzh+lS8bku7dCVKvBYCqvojYwzIeGz8Ga6qJ3/gWDYs/JkkmI+XIUkw/3EB0c2/3M7Idb1I2
      811ORIVircrh7aWvUuK9i2MpMlK+3MN8SV+ojmfjWw0s/jgJmSyFI0tN+XBDdIsf91Zf3J8/
      yFenT/H2jDpij+eAdShRsq340zI16bKT6yofAK5x9fJQJPZaXrCfblLTrFTyI/CZCGLzOvqy
      B/GYNVy9dr3lncdsKLx46Y6K1EydQg5yQibjxF5vSl5dTXQJWIdGIdvqD3ZL+Fgmu2MKBFg7
      4WqWT1EJUFZMgYMDdtghGVBAUQ1QUcbFERI6dnvcoq/78xz86jSn3p5BXexx2p3ZJK5XrwF8
      prD0k/4s3/8CnqZgJJlFkOu3nDyjmdjVnCPlu4kE+N7He4IT1wskAvR5GGe/jewKs4P6JDK/
      vcS5bwP5l9ax/tWgrv16Bs2NZOV4TcWUZJFmEsKrCx3U+1FNLRliCvVJmXx76RzfBrZKhWrg
      cYCB9jhZqhvkQ+b96elKrP5Cx/m0NJYarlUZY6PdZXiu47Rsnfr/DT9T8Olanlu5g4HHtrTT
      yC7zYwVYju7wZyLUlGSRZjKTV2cMVu8JHr6QhRM/4NA3FSyy68q/5oCjaxXHi38MdfAAAApE
      SURBVGqo76ugj2QSRljg4FRNfAmMLC7Awimwkz3BA7F3slR/Bw+Z07+jCvXfqpk6NfBz6Sne
      WDGXwk1xrHQfwNR5/ny4/2tKghZhfi6FiwFP46m3IvPuoXcA+G/tqId1ZeXnbxPUrkfUkuFD
      dewVXFfy+dtBbXSkvb7O6CCfFix4dKAS1f/r4GOT/jgtXMjEDw5RdR18h9nzQHw+Csarp0Gq
      K1RWDsTG+i45ZAEwReJsx1tlFRRxCSdBbQ23trGhoDiPYsUlnP170+1kQn/baUwZvY39OaXg
      bofp+LnM2b+J1JLp/OVkNXNWeuiviL2L3J01gKkbHq65/HPfcSo1e2J/Lk0nu6NWazea8Q1H
      2B1TRL0KVPVXKa+qx9TNA9fcf7LveKVmr+7PlKZn69D4TXnQ7CoXL95Ehar1RvZ2i6tLPo9i
      OUhjqtfw3ef7OV5wlXoVoKqnKCaGZDNbbB4BRvsxs+ErYo5V0kADF2MPkmA2BR9JS4qXfyzD
      cfjQduqi6TxouBhDTPJjjB+jm33T2skVCk5zumBoszXT1F4Ciniyckfh5tK7zbHhWjJnsh5g
      kKV50wUwPcicL6J2kUIQ0+9xl9pdWgQPYNYrW3ji+gGenSQgCNNZsCOZmx0dbuTO/3lvI3ap
      q5nhI+AzaxWHFbdgwCxe2fIE1w88yyRBQJi+gB3JHaaihTuzl41EsS0QH2Equ7/tqri65GOB
      l7cruXmFzffQh7gPpWDfcp7yExB8ZrA69XHW7HmR8aaaa9qzmD8dfpZJwlRWptqxcVeY1tRI
      QW62JWNHDWpbF3sW86cjf2eqIDB1ZSp2G3fpLuVzcMS18Cu+ui2hebliY49TZiKJpk449Mae
      4KY1gCAwKXQvP05+nYgpLQkPmDob96x08PFud0RtrcJV354O7+juxF1GlOR1h+p4Vi2QM+PL
      LfjqOZNRZe8i8MMhHOp02vXHpOFiDM8tL2FuL9TT3UZ8FKI7DJjO0uDvOfx5mZ6PMVTw6Tsy
      JofPus8av/qv0ZOWp+C69cV7vvGDOAJ0H1UZsc/vgBffItSmJ/NpFWWxy1l7fSlHVrrf0wtE
      Q0AMABGDRpwCiRg04q9CiBg04gggYtCIASBi0IgBIGLQiAEgYtCIAdBdRE/wfYXoCe4WrT3B
      bT3ALX4AED3Bfwgae0xZ40fzPRo3nlW/+rWuoDFqoWej364LPU+y1zjbuNFjfuNHZXe+11Le
      so/mN3o0vdCVqs8blz7xYuO/f+ng40/DGz3mf9SozrZ1/dzJr5lbG33CP22s6l4JGhvz326c
      7rOhManm1zYfyd/wafR5Q6516OzGF19c3Tg36nvNO780Jqz2aFz6+fXGxsbGxrMbPbpdB3fW
      238rDjcu9fRp1Mr2D4XoCe4Gd3qCW6Es4PMj+UxcGKwxN4qe4D8Coie4ubjd9wRrU3f6Iz7+
      KZDgpugQPcGInmBD8QRzla+PJmMVMocxTdEheoJFT7AheILV5f+SI/kT+NsuLZOd6AkWPcH3
      vScYgDoSP/iInwL30mFHJ3qC71lETzA99wQDcPVrjiZbETKn9RcteoJFT/B97wkGJQWfH+GC
      W9svWvQEi57g+w/RE6wToif4fkX0BHeB6Am+/xE9wfcVYgCIGDTiFEjEoBE9wSIGjTgCiBg0
      YgCIGDRiAIgYNGIAiBg0YgCIGDS94gnWdtMC1CdtUP9+/B0St95AlRaJ79yDKJrfKSMmTEBY
      coRm3ZzqLJs7EeJ1zZ3+X18CFqwmKrs7GzvaepQXRMRxsaGnZRLpfSr0HwF8/f2RZ2lbz1Xk
      ZJWxYIG/vkm3i5HEhRFVGukbQH0xij4TmHCzyY4IlBSRb+aKkzXo4wduciDLZCc4GNjI4U0f
      ti+N0yGNlGO7mFn3IavezhYN8fcM1voHgPETTzIhS05u8zu5yPPGMtpZ35Q7wMIBp4HfoWhS
      OBYVcslpFpOcNXZEoKaogCpXR83OJ/39wGDC4LFSbGp/6Vwb2glGpg7MfcqL2oxsuqsGFrl7
      6L8GMHZntFMaWU1zEkUWmS5SXFsdVMOZrc8Q6KeeDvgFriZGUQ80kL1rFrO2Z6gbVm0SG/yW
      ENvG0auNHc4jabafXy4uYKijI3aSh5sdvCWK73Ac6aLe2XSHHzgtUiBsRww7lwXiJwj4Bq8j
      oYupkqq+nOPvH6UmwBd3VCgOzkdYFU/L1td4VvluoHs63DQimzVBd75OI1IIY0fMTpYF+iEI
      vgSvS9BMJ1WUxUcwr7kul/GxGFE9phcWwaZ4jB1EpsaAV5GdzTDPtuKHgQEb+fhrmdrD+zdj
      Pth9jMuY4LFyG9P+s433c25ydvc7sHZHF+IJIyQuI7ikKKYeFSWK20jsTRlk78SlwiLgMuWl
      fXGyH9RhCrduWTHnjaMkpcSzyvY8X6S2HwGJ69WNzGfKUj7pv5z9L3hiihGSWUG4fnuSFh1u
      Ct9NDKAzHa7qZi4HY5J5bJLQiae3VSm5ZTWHN44mkRK/CtvzX5BaAdw+Q9SbvzL/SAoyWQpf
      HlyM2591SlCkHXrlLpCF+2jIyqGGGnKyLPD2utON8wDK76JYNtsXQfAhcEcGKJXqR4qNJIS/
      Pofczc/ykfGLvKzDBmoLBycG5hZSRAlFRU7Y2wAOjgwtKOayqgRFoWuzIbE9+g9zwLa/CRg9
      jPlfOj6ueQ1w6jM2u6SyYu5eclTAgKnM8y8j7usSoIZzKRcJmOLZru2lOYiC15Pl+jr7wyU6
      WmH6M8zBFnUxzWkuZh9rhj6WzXsv/YO3Y5Moui3BUTeBpEg79M5tUGsPxl7OJPtaNpmMxePO
      9p/zIS9/YkLYRyfUDWrrnQtkI/r0Nebnih/5SZf87JwZeesSFSVFFAzQmM9NrbG5qaCksIj8
      oVqGxN7ApD+206Yw+kYmOaUApoyfOwdOpVJSfYaT1XOY4dF+s/bfKiMlZg1j+j/AQLshmOnt
      RLJj0UefsiNcSt/vT/LG4lmsS6jWN1GDpZf+DiBh9PgCzh88T81o97a/OvDf29wyNcfyLyao
      6stJ/6a05bPaNLatlTFu6/s8N+gTImN1ENAZSXAZ8R2KeAXVTg6a/OxwcM7nXHwB9aNGYNM7
      F6ahgWvJZ8h6YBAtOtzpBJl/QdSuFAia3um0xsgmkO175nFj51L+b1KV1vVdofKKChquUXD8
      DHm6FKUmhyT5zzw+ag7hG7exfsZD5OSVdn2eSDuk9d4fwtwFH7IS8/HwaGc8Hh3C363+zQuT
      fJm58p9c+bMmRFQ3ObtvNxWz1/NXm4eZ8MILDPpkAwfyGqAilvAOb19a4OBkQcJXCTg4NDU9
      I+wkD5OY+C2unc1/ukHT9EUQJhG690cmvx5Biw53AFNnu6PW4XbtejSyCeGtg09RvX0p287e
      RMUInpxZwwchPvg9tZHjfYbptjboC5c/38hfpwoIwlTWZ9rxfMhoPa7SkBkvSvJ6TgMXY55j
      eclcvtziyx/ACCrSDuKOvJ5QEUv4ggP8MCyErXvFxv9H5v8Dt9Nv5iJDYeYAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='teams and total wins' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAR/0lEQVR4nO3dSWgkeXbH8W9E5L4vWmtTlbq6q9rdTQ+05zDY7rnMwZc2PhoaxjcPGHw0
      2GB8M/hi8M1gMIbxxXPyQHs8NoMHexo8bU8zvdWqWlRac1PumZEZERkRPlRXqVKprsqQlJmS
      4n2goKoUT/Fy+UmRkf94qbiu6yKET6mzbkCIWZIACF8LzLoBMT2OpbNdrtNu6iTjQZLpPNlM
      ctZtzZQirwF8xB3ws3/9iEEsTT4WBtuh2moTjccZqEEaT+6SWrhMLHeR3/r2Wyiz7ncK5BDI
      T5QA0XicK9kE6YtXUBSFlZUroATIpmIsXrzG5eUFVlev+uLJDyfwG8B1XRTFL3eXOG+O/RvA
      cZyT6EOImZBDIOFrEgDhaxIA4WsSAOFrEgDha2MFwHUdavUGzsCi0WzT6zSo1FqT7k2IiRtr
      KYQzsGi2u8QjIbrdNk3LwnUd8pkEjuMgbyaLs2q8ANgDijtbxMIBtja3yOUymI6Kqqq4roum
      aZPuU4iJOPY7wbZto2kat59U+OG/fzFWTTIW4i++//5xdivEiTix1aAd3eDe5t5Y22YSkZPa
      rRDHImeBhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvjbUWyDZ7
      PNoqMZcMs11qkE2H0U2FG9evTbo/ISZqrABooSjJWATdtLiYiVNxFeJhF8dxnl8P4G08istg
      MHj+r88flvjnn98eqzKfivKnf/AdD/sS4puNFQCr36VarbK8tEitpbOYCtG1lKHrAVTVy9GU
      QiCwv+tu3+LBdm2synYuMVQrxHGM9UwKRuK8/fZbAOTnnv5fdmItCTE98iJY+JoEQPiaBED4
      mgRA+JoEQPiaBED4mgRA+JoEQPiaBED42plfU1Cud3lSbIy1bSwc5O3VhQl3JM6SMx+AXz8o
      8Hc//nSsba8tZ/jbP/ndCXckzhJPATB7HUr1LrnE08VwC/nMpPoSYio8BaBcKlLY3aN7YZkI
      Lk42dSLLoadV67rDtUJ4CkAuP0e12SfkGHQt9cSWQ0+rVlEUWUothnh6NsSSGd59Vw57xPkh
      p0GFr0kAhK9JAISvSQCEr0kAhK9JAISv+fqkuGnZGNZ4b4xpqkosEpxwR2LafB2Af/vkAf/4
      08/H2vbNlTn++gffm3BHYtrkEEj4mgRA+JqvD4GO46f/+5CffvJgrG1vrszxx7//7Ql3JI5C
      AnBEzU6fjVJzrG1zqeiEuxFH5W05dGGLYrlFMhPBMBVuvr46qb6EmApPAXBsB9u2sJUUsRMc
      jz6r6wEcdza14vTwFIBkOkXHcMjHw+iDs389gKrMplacHp4elXgyy/Xk08HoMh5dnAdyGlT4
      mgRA+JoEQPiaBED4mpyamIGeYWFY9ljbBgMq8Uhowh35lwRgBn7089v8y8f3xtr2O29d4s8+
      /O0Jd+RfcggkfE0CIHxNAiB8TQIgfE0CIHzN01mgVq3CbrnO0mKe/kBhaT43qb6EmApPAUjl
      5mh2+zTbXXBdHCcjy6GPUisj3U8NTwGwrR6BcByrW6VzDsajz2o5tIx0Pz083bNaMMbyQgyQ
      Qx9xPsiLYOFrIwH4xS9+MYs+hJiJkUOge/eerlF5//33p96MeLX//vwJXz0uj7XtzZU5vvee
      DC54mZEAxONxtra2+Oijj/jggw9m0ZN4iTsbe/zs08djbWs7jgTgFUYC8OGHH86iDyFm4tAX
      wTtbm1gDG3fa3QgxZYcGwNYb/NfH/8d4l2wIcXYdGoBKrcDm3U2saXcjxJQd+kZYLrtIbM5E
      Pg5CnHeH/gao1dtcW7k47V6EmLpDA5BKpabdhxAzMXII5LoOvV4Po+/KWSBx7o0EwOq3MQYa
      0VgQ5cDXauVdKm2LmGrRsRTefOO1KbUpxGSMBMC2bFqtCjslnXe//a2hDdrtNkZLx83kZTz6
      jK4HcD3UOo5cS/AqhwTAAC3M/Fxk5AXChUuXsXcr5DMxdLke4Oi1x+hZ8VCrqnItwauM3DuK
      FiCTy7O8fHHki8FwjNVrKwCkp9GdEBM2EoB+q8XmToFgIMzC0ryMjjtH/uEnn/HJne2xtv3B
      773Hb964MOGOZm/k+Z27vMrNep3tcpW3ZtGRmJhW16Bc7461rWH647XDyAGloiiEIxECqiKn
      QcW5d+gRztzSFRaXpt2KENM38hvAdU1+9pOf8MtPv5hFP0JM1ehZICXEa9dX6LuRWfQjxFQd
      elI5GglRKpbx8vaUEGfRoQHI5ufBMiUA4tw7NAC9bhticeSDecR5d2gAmq0uERy5IkyceyMv
      gvfW11h+6z1CofE+w0qIs2wkAOnFBf7nV79EDUa5ceBr7WqJnUaPTFSjaym8tnJpSm0KMRkj
      AQjGMnz3/d85dGNzYOMYBr1wnJAqy6GPXDuj5dCuh54dx/HFUmpPa93C4TCK2iGiQm8gy6GP
      XDuj5dCKh55VVfXFUmpPtzCRyfNmJj+pXoSYOhmPLnxNAiB8TQIgfE0CIHxNAiB8TQIgfE0C
      IHxNAiB8TQIgfE0CIHxNAiB8zfNqJ13XCagKhg3JeHQSPQkxNZ4CYPbafHFrjeX5LJbtknht
      Fdd1sW0b1/U2Rsu29z+CzzlGreuMX+u6B2o97Pc4tRynlhPs2cOos2eP63nnKQCVSgXL0DGs
      JO4LR0+KosDIpwm83NOar//uqfJArcfiF2u97FhRjl7LwVqPTuy+8lZ5rJ7PCk8BuHhllaWL
      K+DYDNynd5CiKKiq6vmJ+OKaeK939NB6eg+1inJgvx6fEidWO6Pb6yUCo7Xnk+fXAJqmgaah
      TaIbIabs/EdciJeQAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhf87QW
      qNOssbFdJpOJ0TMVrl+7PKm+hJgKTwGIxWKYpoHlJAgHZDz6kWtlPPqp4e03QLtNNBIlElDo
      y3j0o9eewfHom6UmzpgXHy3k4sTCwbH3NUueApDKzZPKzU+qF3GK/fnf/yednjnWtn/5h9/l
      vRvLE+7oZMiLYOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDha54C
      4AxMiuU9jF6HRrs7qZ6EmBpPi+EMw6RTr9HWg6i2Syp+9fnS3nFXCj41PHr7OLXexqO7xxg1
      fnK1nsbBz6hn52Cth9HqjuucmdHqngLQbuzRdxQiAwvD3p8MraoqiuptXvjRpyXPpvbZbZ12
      LQdrx69k9PaOX6keY78Ha08zTwHIL14ilR8QDAZx3f0HUlG8Dgs/JTP+PToNM/69jkcf7vno
      n+Hg9QMRzspnC3gKgBYIoAU8T1QX4tQ6G7+nhJgQCYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1
      OakvJu7HH98be/nH+++uMJeOTbijfRIAMXE//I8vsMdcs3XzypwEQAiAge3wV//08djb/9EH
      77GcT3jahwRAnFqu6/LrtcLY2/cMy/M+PAWg12lRaeoE3T4dU+H11RXPOxTiNPEUgGgiRajd
      xbIDRIIyHv3ItWdwPLqnawkc+8ij1W17v9a2vTwvhmt75oC/+dEnr6zxFIBuq0Zlr8r8XA7D
      lvHoR649g+PRvSxvVlVtqNYLTduvdfF2Uc2LtZg2nz0ovrLGU5fxVI533sl5akqI00zeCBO+
      JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL52pADUKkU2d0sn3YsQU3ekBRtdY4Di
      ZcCrEKfUkQKgOhZd62zMfhTiZY4UgItXrgE8Xw4NEI8EuHF5vIVyyWhoaHx2Ihocuzafig7V
      pmOhsWuX88mh2mwiPHbtlYXUUG0uFRm79tL88H7n0tGxay/kE0O1i5nY2LVL2fhQ7VJu/NpE
      JDhUe/1iduwLTmJhbaj2xuXc2JdEhoPq81rXdcbuFyAYUF7YrztWreJ6Weh9wLPrAI46Cltq
      pXYSta7rjr18+1hngZ7NvVcUBcvQ6ZkDms3m03HpL/xxbQvbVUb+/1ktuOzu7NDrGyPbfNOf
      Z7WKa2MNbPp9E0VRMA0D07JeWduolilXG4d+3TCe9lEtF2i09ee3dej2WhYDo8/A5dDvgWtj
      mAP6/R6WZT+v3d5YRzcGL+kPLGv066qqYvY6bG4XeDZ+3DAMrBduq95usFOswCG13VadSm30
      sRn3fratPk82tnE5/Pa+rHZg9tjaLQ7djy/7A+w/vl/fJ6WdLZqd3li1L/67Utyh3up+4/bH
      vib42U71ap2y41La2OKdt99CwaW+V6JnuaSiKsWOwrXlHM1un0hQY3l56Xlto7RLJJ1jd2sd
      NZwkFnBQAhHqtT0ymQyNts58LknPUtAUm+Wl5f2Emx0+/fIxN1+/ysbWFuFAgGBIJZ5IUq9U
      MB2bSDSNY3RYWnmNWEhDURR6lk2/W2W338ZVAyQSSaxel0bXQFNhZSlFaxAm3KhQ2DZZWszQ
      NVwuX1gEYK+0S71rkUsncMwebiiB1a0TiSVoGzavX73M+toXLFxZYWAYLC5kUVwbLRKlsL2J
      hk0qkcAOxei0O4QVC8uxaOsartFi4dJlOvU6yXSKRlvnxvVr6M0OqVSI9c0tXNtGVaHfbZLK
      zqNqYXBM4prL9s4upmWTCLpEMguk4xF2d3ZI5BdoNFrYRp9KbY9sLo9t9bEIEQxoDHptIokk
      /Z6BYZhcXb1GUHv6M1Jvd8lmEzx+9BhQyKZj9C2HbrdHKhGGQIR2tUxueYV8Oj703NjaLqBo
      Go1mCxUwTANDbxOLJWkYA0J2D6wOVWWRb13ff168yFWDlAubKPZFrH6TUr3D4sIc3Z7FyqXl
      kefjMwNUWpUihh6l1+0RDUdwgir9vk0s4Jzc+wCKqmHpTeKZPJXCNg/XNwjHE2RSSYy+gT3o
      s7XxhC/v3McwjaHaYChIcWeHQDRJNKRy7/aX7OyUyeUzNJodcpk4G5sb3F17hGkYI/vOZjOU
      i0V6nS49c0C7WadZr7F27xYdS8W1dNbufsVudf9zzfRWnWa3T6PRoNHqsvP4Ae1um8++uoXt
      gBII064W6VqwkEmxtb3BnfuP9m9vIEwipNDRDdRQFA2DdlunUd/jwdpjHMdCC4TQ9d5Qr9vr
      DyGoce/2HQrFKpVygc9v3aVWKaJbEFAV5pcuYNRL3Lpzi92qTioeAcCxDbZ3y3RrZe6uPcCy
      IZNbQHVNDHPAoK9TqNRo1yt89dVd+q5GKhYGIJVOU6mUWH+4xs52iXw+Q7XeZC6fpm/02d58
      whdf3mK3WCE/N8fW+iN084Urslybre0deu06t++sUa43MDsdDNtha/0RDx+vk0gvYOmtkcdH
      dQdU6y0qxR3WHm9g2zYP79/lycP7pOaWeHj/DvVOH0355qPxaqXI3PwCD+7fpVQosjif5va9
      hzze2HnJsxIalQI9CwzDoLD1hGqtjeUqxMIBWs3W8V4DvMjrt3kxqcepxfXy6VX7tcP7dCkU
      SiwvLw1td1hfh9c/9eTRGtnFy6QT0cPrDvRaKRbILi4TGONw9Zv6Gafum/qdVP3Bn8JDtc6A
      QqXB8uLcWLVffwdetvvDaw7Z9wHFnY2TC4AQZ9GJzgUqFAoEVZdALE13r4CpaCRTWQzDJBFW
      MN0gpt5i4cKl58eWAI6p86vPb/Ha9TdIxKOYPZ1Of0AirOBoYQaWQTY7h3bYAVu/wb3tOpl0
      CrPXIxGPEwxCp+/QrOyQzWUpNSzeeXN16FOuNjaegKsQCWnEMzlqezUW57OUqi1SUQ01HKPf
      M3EtnWR+iVh49K56eP8OLcPhN964DjhUy2WSySQDNUivZ9BrVsgtXSGXHh3WtP7wHvW2xRvX
      L6ObLqlEHHdgUNprAjaZRBRCCTLJ0Slpe6VdYuk82xtrpDMXcBWXTCqJbeo06jWUWBYVhaX5
      7P5jUyxgGCZLi4soCtSKG5iBPBoW+WwSXdex1TDV3SdcWr1J8utDJ4Ct9YcMtChmt8bixas0
      ajWWlhfp6T30dpPs3CK1Rot8OkpXNzAdhQuH/IQvFApEImFCmkLP1nCNNsF4mkatztWVywe2
      dtnc3KJaKpNfXiIeDqCGEjiGTigaotk2yCbDdC2IKDaGZaMEI8xlU4DDV599jhZNsnr1Cs7A
      oFJrMZ9P0ek7xNUet9f3eOP1Vf4fwCTk/6PfO2cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top 10 bowlers' width='164'>
      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
      PwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='top 10 venues' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top players of matches' width='144'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='toss win and match win ' width='161'>
      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
    </thumbnail>
    <thumbnail height='192' name='toss winners' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='wickets description' width='192'>
      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
      So3/Ueb/A+9iEDCCh07VAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='winner toss decision' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dyY8kyZWfP3P38Nj3yH2rvbqqu9lks7mInNHMYDQzBHSQIPEgAsJAI110
      1B8gQRcBugnQRWcBuuigwwAShkOQGM5Mk2yyuQzZ3VXdtXXlnhmRse8RvpgOkZVdWRnuntmd
      UVVZYd+pyu2lmbmHPbdnZj8zF1JKiUIxpWjnmZnyJcVF41wdoN1un2d2CsXEOVcHUEwP7rDL
      j//mb9gpVcekSn77/nt89MmjY1drtRoAVq9Fu2+f+Kvdxw9oW5LNjQ02799hd2eLx3uVSVT/
      CGOiuSteWTQzRjQcRetV+dEPf4MZCZGfX+Leb/6B7/yL79K3YFjc4vsfv4+RnEEPJcjkkvzy
      Z3/Hlcur7LY1hq0mN9bilLox3nnzNYr1FouXBZ/u79CUFtv/8Ck337jELzc+oetoiH4bPWTw
      wYcfc+nWG9y+cYO15fkvdh/n9DwUU0g6nUIIAUJQmCmwu7ND3JTUuhbDXhMjmiY7s8CVtcXD
      vxDkM0n2SmWEYPR3cwtEDIHrDhBaBIDr15ZwtALZbBRTCKLJLPlMgvzcEtGQzvXX3yKbSX/h
      xg8gznMWqNVqkUwmzys7xQVFSjlyjDMwaB7Q0bPk4s83KFE9gOLc+TyTIeHUzHNv/KAc4Nxo
      tVpH/7atIY6jpoQvAmoQfE5sPn5AIlPg8b2PyczNkcoucmVl9kVXSxGAcoBzwjTDSMehMDtD
      PJNHV33rhUDIEeeSmRoEK+BitYOjHuA8VnF7vd6ZR/+KV4+L1A4MACHEuXnsRfF8xWS5KO1A
      RaqKqUY5gGKqUQ6gmGqUAyimmlOtA0hnyP1HWyzNpHi0uU8mm6LbtzDcHuF4nrmFBcLGxRj1
      KxRPcyoHELpJOhmj0RlwcyXLRyWX2biJ5kgOqmVs1+XSyiKO42DbJ3XeiuniIrWD0/UA9oBy
      pcLCwjyPDxpcm03S6DoUZnIkMkO6AxdN09B1HcNQi8vTzkVqB0oOrTh3LlI7UINgxVSjHEAx
      1SgHUEw1ygEUU41yAMVUoxxAMdUoB1BMNcoBFFONcgDFVKMcQDHVnEmw4Vh9tverzOUS1Ls2
      mtMnnc0h9DCmUoMqLiBncoBycZ/q3g7l9iK5KHTrB+yW6iytLJNPJy6UClAxOS5SOziTA2Tz
      BYrlOvGQQ7vrcP3aTdZ39qmUy8xkUxdKBaiYHBepHSg1qOLcuUjtQA2CFVONcgDFVKMcQDHV
      KAdQTDXKARRTzcWYq1IozplfHvyUjtVSDqCYTu7Wfku5X1QhkGK6UQ6gmGqUAyimGuUAiqnm
      TIPg+sE+23tFIsk0w6GF4XQJxwvMLy2qw3EVF5IzOYDrODiOTd/RSEXD6FJQqlewpcvl1aUL
      JYNVTI5JtAP93l8iuqWxaTK1inP1O2fL8FACeiYHiCdTRJtd8tkYnYFDPpMjmbHoqMNxFU8x
      kXbQq0B7f2ySCKfOXt5hwHKmvwrHk9y4MZK55g+vRYDU2YpWKF4a1CBYMdUoB1BMNcoBFFON
      cgDFVKOmbF4y+h9/QvcXv/BMz3zvX6GFw8+xRq82ygFeMqzNTdp//QPP9PR3/yUoBzg3VAik
      mGqUAyimGuUAiqlGOYBiqjnTILjTrLG1W2R2bo6+5aLbPVLZPHooog7HVVxIziaGS2VJNto0
      mi2EdOg2K+wdNFhcXqaQTSo16Dnguq5vuuM4yJf8GU9EDcqRfu0EUkqcs5b3edSg0rVBDxFy
      OtR7DteuXGdzr0StXmM2n1Zq0HNA0/yjUl3X0V/yZ/y824EQ4vmoQYVmsLQ4D8Dy4bUb19Nn
      K1iheIlQg2DFVKMcQDHVnAiBuo0K7773KzTN5A/+9I8wX0StFIrnxIkeIJbOc/3SEq57bt/N
      UCheWk44QKd+wHapSiwe85x2UiheFU6EQHbfZmZxhZX5WSUVVbzynOgBErk0u48+4e9/8j7O
      i6iRQvEcOeEAuhkjlUwgBz1e7vVGheKLMzbKeeNLX2K33CLyvGujUDxnTvQAUtq897P32Xu8
      Tv9F1EiheI6MWQjTiEd02paN/vzro1A8V06EQEJoGKEQGTN2wrhTP2B9v0kqptHsWuh2h3Bi
      hsXlJXU4ruJCMnYMsLK2xp17GyeuNxotpNWk2s2QiYUJoVOsVbGly9W1ZSWHPgeUHHo8z1cO
      LSWOZfPsWvD80hJdS1LIp2j3HfKZOMmsTafvqMNxzwklhz475y6HLhVLWJZ1wgE0I8y1a1cB
      yBxeCwPJ5NnKViheFsY6QCabptp11Uqw4pVnbH9brdTot1pqIUzxyjP2JX/5xi3WLjtqGlRx
      4fhvP/6vbNU3x6a9ufAW//ab//7YtRMOIOWQH/zf/0d2foU/+OPfn0wtFYoJUe4cUGztjU1b
      yayeuDZmHcDk5u1b2AMba5yBQvEKMXYMkIxp3N8uqsaveOUZ6wCVWou15YXnXReF4rkzRgw3
      IGwmsCzrRdRHoXiujIlyBI8ePSSen/tcWyK7Q4e91tAzfSkdJmKowygULwdjB8G33nyTR/fu
      469KGU+1Z/OTx03P9H96K6ccQHHE8Nf/k+Hv/vfYNH3pHaJ/9l8mWv6YaVCXsO6SW1w9ER+5
      ww73Hu+xOJ+n3bPRnB6pTJ5QOKYOx1V8LmS/iWxsj0/LrE28/DEhkMW9u/foiDhffSalU60w
      FDrVegsNl16zSrHcYmFpkZlcGsdxAtWMruNg28pZvJg2Najf/Uopj/I5tRrU5zSfp/PzVIMW
      798je+MNzI3HJ9YBjEQaY/8RPZFGOi5XL19lu3hAo9lkrpBF13U04R/eaEox6su0qUEdn/s9
      rcrzmJ3Pu3Wc3YncE4U53EcbRFLZE1KIaCLN619++9i1awl1OK7i4nJyEKxrDPp9hDAnejCW
      vflz+j/8z57p0X/+P9DzVydYA8Uk2az12awPxqYJAd++9HK8OE84QDwzw+rCHh/cKU62ZKuP
      bO54pztqHeIiU+3aPKqMP1ZB8PI4wNgAzNXCyEHnc02DKhQXiTErwUN++dP3MRPxF1EfheK5
      MnYh7CtffZOtYkvtB3iZ2dmGRw+907/1e/CSzxa9DJx4Qo5tY4RCCCH8plQVL5p6HR4+8E7/
      5reeX10uMCccYOvD37FpOSQScXU8uuKV54QDpGYX+Nr8HBEu1veTHpbv88NPvu+Z/r23/5xM
      LPsca6S4CJwMEp0+P/irH3B1dY3X33r9wmyKKbcPePfTH3um/7M3v0sG5QCK45x4yWdXLnNr
      dZa9g4oKgRSvPGNmgQSW7cBggA1qJuicuLO/y98+vOeZ/hdf/zYxU32S8Hkz/vsAb32Z1Ez5
      xBcipXT4xfu/ZmW+QK1rodttzPgsy6vL6nDcAIaOTXPgfeC8VHNuL4QTDtBr1vjko4+4X2yz
      uLp0zAlKW49pdrq0hpCMRTC1EPvVGhubLtcurZxJDu24/h9gctyzyX7doPxe8MG9p5E527Z9
      ajm05rq+kxS244Bts7u5zvqD+5523/yjfxKoQD0rjuPgSv88n/wWL50cetiu87DY5K3Xb5x4
      wHOr1/hWfh7hWDR6DrlUjFTWpt13jw7HPbUcWvMPrnTtbLJfLSi/FyzDPo3M2TCM08uhA+wM
      XQfDwHVdBv2ef376+Qa6o3bgHxE8+S1eOjl0cnaRr79jsrqyNDavRDwBQDw1+n8YOLw0lXSH
      Q+o97wY2l0yin/MbVnF+nHAAzQiztrL0IupyIXn304f897/znn79X//635CPK13Vy4p6NSmm
      mouyzqV4SZCtHrLlHfKJhYu12KgcQHEm3EoLd917s5RxwRxAhUCKqUY5gGKqUQ6gmGqUAyim
      GuUAiqlGOYBiqjnTNOig12Zju8jcTIZmz0G3uySzBcxIXKlBLziVn3zIwY9+7Zl+8z/9OUJ/
      9d6XZ3KAkGkybDXYN0wiukO3VadUbTO/uMhsPjOVatDzVHlOQg0qA/OzRyrJ/gC71fXJz0ZI
      DSmD63eh1aB+9DodhA6ubdEeulxdu8xuqUK73WZ+JjeVatDzVHlOQg0qAvMzTvW7GbqB0DUc
      ofkemPZEXXph1aB+xFNZXn/r+ErfFXU4ruIC8+oFdQrFGVAOoJhqlAMophqlBvXAGrQYdEue
      6bH0KpoWeo41UkwC5QAelDZ+zAd/+x890//we39NNLn4HGukmAQqBFJMNcoBFFONcgDFVKMc
      QDHVKAdQTDXKARRTzZmmQfudJg/v30dLZHEsC91qEUrMsbq2ouTQigvJmRxAE4LM/CrOsI80
      dSJ6mL1KnfV1h+tX1iYihxbVB+j3/tLb7st/gYwWzl0OHSxLds9d5vwi5dBugMxZyaEBy7bp
      tOrMzc7QG7pkUzHSucJkD8cVEmyfw12FAMM4dzl0sCxZO3eZs5JDH+ellEPfTI3k0Jmnrkdj
      Z8lFoXh5UINgxVSjHEAx1SgHUEw1U6cG7Ts9WsOGZ3ouXEDXpu6xTC1T90s/bj7gr7b+j2f6
      v7v5H8iEc8+xRooXiQqBFFONcgDFVKMcQDHVKAdQTDXKARRTzdm0QIMe5XqbuCmod210p0sy
      M0M4llBqUMWF5EwOoIdMpGvRaDsgXbqdNge1LnMLC8wVspNRg7oufjI3x3WRtn1qNej5qTKV
      GtSrfq+uGrTXYXdnl1wuS9+GKytr7JdrdLtdNC0/GTVokJpR086kBj0/VaZSg3rW71VVg4bj
      Kd55551j1y6pw3EVFxg1CFZMNcoBFFONcgDFVKMcQDHVKAdQTDXKARRTjXIAxVSjHEAx1Xyu
      HWFWv0Or7yKcAcl0CilChHSlBVJcPD6XA+zuH2A5Dr3GATKUYXlthVwqft51UygmzucLgaRN
      f2Bz9doNdN1lf3//nKulUDwfPlcPsLp2BUdKdCG4/VoG10eBp1C8zAg5gna7/YUz63a7RKJR
      /BS4ujaSpQokOENvQyOMlKAJwPU51FYL4UqJRGL72Jl6CCkBAY70tjNECCkl4CJdy7tYPYKU
      EglYjrcUO2wYh/mBI73fFIamjZ6LlEifQ3yFaSKlHHXdvg9axz0sz08Sren6Ybkgfe5DhIzD
      302Az30IXRu1g0jU+8UowNAErusipOP9+wod9NDh/brgJcUWGlKM7sOW9tHzPnGvQsPQRvfh
      4iCRox5ACEEymfS8qbNwLB8p6bQa9F2NfCb11GWJeFouKyXtVoOhq5PLJH3sXNrNJkN0cml/
      u1azgU2IbDoRbCdCZFM+dkjKxX3CySzJWOSE3bDfxREa1sAhlYqDdGk0GkjdJJWMjynXoVFv
      gmGSTsa9y5UO9XoDEYqQTsT87WoNNDNCaoydPeiys18knVsgk4yAdKjVGhjhKMl49DO7YZ9m
      u0M0niYaNkDafLq+QzabJptKnSi3Wtqm1nFJJBLMzRw/SubpdiBdm1qtgRmNkxjz/J4w6Pdp
      d1qkMoWjSZUnjfmYXe/QLlcgpH0xuwlPg7rc+egulXrt2FXxrFZcOtz56GMq9Wqw3Z1PqNQC
      7FybO3fvU6lVAuws7tx9EJhf/WCXBxv7PF5fH2tXLe3xeH0L68mbxxlw5+NHVKqV8eU6A+7c
      +yzds352nzv3HlOplAPsety5v+5pN+x02Nzaot3pjxKsLnfub1ApHxyz69aqbO5tcVBuHpX/
      eGOLWqM9ttxcNstwaNHteZ/ePSqvzd2H20fled1H5WCf4tZjKm3rmM2zduWDPfa21qkF2u2y
      u7VOvWN72k18HSCWTFDd2aDe8z+b34yEyWeyvjb1Wp2l1WVy6YyvXa3eYHlliWxAfiBIZ9MU
      sv4HYSWzM6RjOunU+HLTqSSOK4iYTz6cLQiHQ+Szec9yM5k0+ZxX+md2YTMUaFeutVlbniXr
      UZ6ULgsrl8lnR71Nu1ElkkicCFE0XaLrSQqF5JM/JJlMUyh4lC8E5XLJLyI6IhYxeby57Wsj
      XIdQeoFc3Hto6tpDpBYiM7NAJuZnN0BqJtmZRdJR781SE3YAjUwmw9zsDJrvVh2NeCKJdLxj
      boBMNsOHH3zAxpb/g4zFYvT7/eDqCQ1dutiO/zY/Xbg0OwOGw3F5utSaHRqVPXaLh29gPUQy
      GcexBuMz1AxCmsQJ2K6IbpJLRen1PfI5pJCJ85sP7rC1vTM2PRQ2ce3PtqvGUllMISkUCsfs
      IokMMcOlPzh8WRkRcskw/b7HWE0I0qkM0Yjpfx+hGLlUhJmZgq9ZOptDs3sMfXa3aoYJVp87
      H/yaatf7parpIQzhYgfM0Ew8BCqXK2Rml0n5eCFSsr+/S7nWDMhPcPv2LTJp/11o4UiMEDb1
      ZsDAXjr0bZdSqehr1h3YrK0sork2PevZRquRTSXI5XM8/OQhNoBrs7u7R82rfMfik4efejbY
      I1yLvuXS7XX97fQwb9y6ycrS+C/Xi1AYw26yvV8f1VjTcR0b95nGMeh02Cvu0e0dvoicIX1b
      0u12PO5jiItOqxNQP6tDuTFgbWXF16zdbrO/t0Pf9t/fbcYSvPH6bUzDp/kKjWw2S/Wg5OsE
      E3WAwdBCx6FUqQdYSrKZLNXiFg2fUKnXblJptIlGIp42I1x6jk4uGfWvn+2iywGxRMrXLhY2
      2CtWKMwtEBl3+oUZJRlP8u3f/zo6UK+Wyc3M4bUtduBIrq4skk77h2gDS5JOxcll/EM+NAO7
      12JjaxvbOfljN6pl+m6Y5YXDUEZotNsNKtXjYzPHscnlc2ysryOBg2qTdDJG1qP8UrnO3taD
      wA3wQ1tg9+s02v6OYjsuhVyajY0tbyMpKZWK2NIgGvIvd9Dvkcll8fwhmLADdDtdXnvzLXKp
      gE/ICEEsFhuFSn6VNaPMZZMYoZCnDQDSpVjc46DqfQo0gGlGeO31tzC1gFAEHXvQoliunRyA
      ArqQDG0XTQgEkM7PkYoYRMLjHbXbbmJE4oQCjpIJG7C7Xxlb5jFcGxGKsLAwj37iF+1Trtvo
      miAeGcXMEshmckTCx0OXaDJBNBxndnY0JprJp1nf3KZSrT6bKQCzhQzJ/BJhv9UkKekMHN5+
      602iYf9QKWyGMOMZCpmEr93y8hKOC0Hqm163y872JoMTvfZnTNQBdGze/ft3kVpAgwW6nQ6p
      /ALJiHeoFDYNas0O5YOSb17NepVs3t+ZntgdHByM5pv9EBrzC4v0u+NDGulY9AfDoym2Rq2K
      LQWaNr78bDaHlJLBwD+2R9OZm58nGffvyZAOQ9ul0+mMcRaTXDZGKpWkNxiFNkPLptdu0Or0
      jg1ge/UqPQyWF+dGIzYhmCnMEI2EPeoX4vKlVS6tLvtWb9Cu89Nf/gNmyH/dVbg2fUcwP+Mz
      6BeCVq2GdLrUe96hkmsPOai1WJ6f9S1zog6QSOf5xje/GejRAN1el3Jl/JvmCKGD3aPT6zO0
      vb06lZ0hl4wTi/k3nHQ6RTSRIh7zD6nK5RJSD/PGrRtjUl0OKk3CIQ3nMNbcL1fptWskkh6h
      lXRxHEk+HzQLBPc++g13H2742mxs7mAISTIx7jlrpOIRWq0G65u7SCCsS/RoikcP7mI/NRA3
      43HKW59SbR5Oa9o9yrU2P3vvvaN7O47g3t2P2Nje863f7MIS3/j6N4h5OdIhUgtR3V2nY/kP
      XLPZNHvFGoNuy9NGM0wuLS+CESHsEypN1AE0TfD44X0q9eDB7Uw+TywWECq5NjvFKqZp+g+A
      XJsP7z2k0/Yvt9uq8+jTx0dvRi/2SweUS3u0u+NnliLRCELohIxRTzJXyFOYXcB1PMYzmkFI
      Hx0i5Ytrk8jMEQmIdYe2zWA4xDTH97TSsdAMnWa9NToPSjNZWlzkO3/6ZxhP9VKOJdF0wdHB
      P2aadMThK29/jbGdmXSQmna04jwWIdBw+eTjT2h1/dcLdMMchXEBoU25XENaHUIx/8Xbeq3M
      3s4GLZ+eYuIfyOgOHYb9Lse/K/kM0qXZ7rI2u+CbV6lS50/+5I8plg587RAaa4tz5Atzvmax
      RIq97V8hhH+3e/v2G2NWh58wmm0oFYt0enni0TDZ/IxvudVqjXgiHngY1UG1yfLiDJG4/w99
      /foNisWSZ8jnOC7oUb70pUujN57Q+fTBHdyrN5k/WsF1afaHrK1eJps+7BGHTdqWyWo2Pfbe
      q+USM3OLI1mLLxIbQafZOLai/SzNWhkjnvUd3DqDNomZFd4uZLECxlCRaJyZxUsUkt7NfMLT
      oIKIAZbrX9GtrS2yuQz1hv+g1eqPVjStgBcnQsMMGYHH/SEEr924yeqKfwzbqFUoFouesxjD
      Xofu0KLn0UM8SzyRHI0PAt50tUqZg0qVeDxAam61ebxVHB2HOAbDDGH1+5+tdzg9itU2tdrJ
      kPNYQw8lSIRd2h7TnLm5FdJhjVgsoH6aAVYXzfQONV2rQ9sSWO06fZ8QSGg65f1t9kpVQidH
      /McIR0ykBGfMzNhR1fxr/kVx0Yww3bZ3rAYwGPTRdYPh0EccByyurLG8tMxSwMAG1+bew0ds
      bfsvmIGO61q+50kCOLZFrV73/NK860ouX716FAIFYZohqpUyrZb/OkU2nyefSVGr+78YMGIk
      IoJ2Z3yIYdkurv3UuMmIcvPyErn80wtTGjEd7nz8O7aLT6QQPZp9yWDgEbpIGAx6NFptTwHa
      k3zCsQzNpk9I6jpYjkS4FkM/8Z4R4fr1q1y6eo1YyP8NUq/VePTJB9R8FswmHAIJht0mth5j
      aLuecfvV66/hOA667t+AhsMhjx/eJ5qZZW1p3tOu1+txZXWFeN4/BELa3HvwiKWBQz5729PM
      lbC4MI8jxz/wbqfJL3/7MW++84/8yztEuEOanSFmzL/HKMwuBE+BAjh9Wj2HqEdDFY6NhU2n
      1SWfioIzoG9r7GxvMZNLH4VOsVSShbnlI8nEo/VdsvEQhjF+bFEpF2l2ByznA15IIkSjug/a
      +IU6AM1M8uatOC6H55r6UDvYY7tY48Zrt4mFx9tKKRG6yeLKZbJx71nIiYdAc/OLhEIh30Gr
      kA4ffvhh4Mptr1Wn2uoTD5jd2djZ5+bt1+m1ar52vYHFtUvLGLruu1o4OztDo1an5zFtmUim
      mZufw7X8B9OfoZFKxD0b1hOE3eX7P3qXBw8fBuQnSKWSzBTGSw1EOEohXSCfOxxLaGHSiRBz
      c/NPjRtcNu4/gGiKiDlqVI6UuIwWyMaRm10imYgxV8j5O6oeYmlpMWDlVrD9+CG7xQPfGT7X
      sVhf3yKVzWL4jJYHrRJWKMPaTIJq2/t3mWgPUK5U0HSd2Rn/QSFCw9Qc9koVsmnvAZ8UOitL
      /gNlgIXZAqVSidk5714CIBKJEk+mELqJ48pjMyLPMrBcssnx6aFojHwuN5JCn4JydfRcQgHz
      4hgR5tMhokn/FeNypYJrW/T7g2Ny6BEOuzt7OEhS2acdRNAfPN0DuSTm17iUi1JtDYhHTG7c
      vOVbbq1yQCqZpN0bHJOJH0NKKrUmhgYpT3HgiHwhx28+ukcmm/d1lrml5cDxkxnLEulU6Yuo
      r7huoj1Ap1WnM3SxrYDBoXTY3q8E2mUyGbb3ip4LUk+IRGMgHf/pOUbPUEpJtd4k7DutalGt
      1Xn/5z+jeUKq4VLcL9JqtT0Xvp6lkMsxHFrB075WlwFR4gHz52HNpTV0PQSANo6jYw3tozHK
      1u4+1rCPoT/dMDSa9QrbW7vBK+2H5DIJWu0+3a6/xKF6sIcWTtDr+I8FDw5qaHabjk9HKvQQ
      EQPqlRKtgfdsiKYbRCMh7ABd0UR7gNVLV09pqfH2V98J/DiE0HRSsTAI/2qHQzq1RpuFuL9o
      rlyt4ToOuWyAbFqPkEmEmJ37ytiYM2ya2PYQn577GSS27Y6+beCHEWUuH6fV7hzb2PMsyUwe
      Y7POcOwgPcxrr18/dkWTFrnZJaT9dEvTuHHzJpIx+w28cG06Q5es3xcDhOD6a2+cKrtkNsfb
      8wX6vpGSIBKJYktB1PQZKwiNbruFMCJ+UqDJ9gDDwYB7d34buJKJEPTazUDp6tbGOtlcznO6
      7wnVWg0BgXa1SglHCjpBGzqcAa2eQzabGRMmacQjBmYkSrUSMFtzhM6gW6NY9h+jwMjph8MA
      yUQoTswUhM0AWfIhS6tXKGTTz8iTXfZ2tvjFez+jVDvl9lgthBx2MMP+Pdmg1+HX7/+crWLF
      1y6sw06xStinYTtWj51SnXQ85rsPwbUHdLt9hpbtazdRBwibITZ3SjiBIZBLo92hUfdXjVqO
      g6bp2Lb/YFMIDcsaMgjQ0V+7cYtLly5x48qar93AhpWlOcYHni49x+DSyiIz+VN+LETTWVxa
      ou8lMz7k44/v0uoOuHZ51T8/q8XGfp1WK2jF3bdSRHAYSotmy386+jMklhS0W/6/W1j02W/a
      9ALqV6/V0dz+mDDzM9xhF2mEMUManb5/OwiZBs1aDZ9lgAlPgwrBjRvXSGT8N0IgBK1Wm5WA
      BakrV6/7pj8hm0nzk5//CmGYLC14T9EJIQKnXgEa9SqGEfIIMQTdRokPtqp87Wtvn6p+Gxsb
      CD3E0pL/5EA6naE/tGm2u2MGt5/RszS+fPsKDqON8EEiQC8ShVmuaFEWF4J20h2iGYSxEEaA
      PD0U4+blZeYW/CclovEo5e0KyUXv+ofieW5dDdZQaUYY4ViUStssXHnNc3V54lsiu52u/yIJ
      AIJMKo7Qzscfu70eX37zdVbX/N/spyUcDrO5ve0p5126dIN//HvfIBa0M+qQ2dkZ2s063V7A
      wt/yKleuXPFt/ACRaJR6vc5gaJ1qe6InQsPqt3nwaCNQ3ACA1Wan3KXZCBAxug6d7iCwHYTD
      UdBCnnP7Z0FKSSSR4eatt5hJvLB1AIgnEoELG1sb62Sy+cCY/bRs7uyzvLLM3rbPxoozkM4W
      +Orbbx87weEzRpusNU079eBxZ3MDYcZIxoM29pwO4YzCBk0T6KeciRqH1W1juQ7pTD5olhGA
      gRvmS7fWWJgPmJrWdBKJqO+g37X7bO1XSCf8Y/vTMmgW6cgoaWPIftM7FJ64GGJ3tl4AAAEs
      SURBVK7TbhNL+XeptusS0jTsIH38KVmYLVAslpgL+mFeENduvXmu+a1v7ZFNREilvtgHC0OR
      CLowCPnNrjyFGRJgxAJ7KFyHdrvnuwdaHsb24dCATm9Iwkc3dKq6xXNEe1V6RCn4rARP2AEk
      69t7hMIRZnLeatDLV66da6npbJ5p+nal7bhYjkPYQw59OobcvfsIS9rMLwUMug8RQmNn/T6a
      fpOlWZ+TNaTD7kGVeCxE+tr4qXE9luP2Nf/TOc6CZpjMz/uPOWDiDqBxabGAZqqDcyfJtes3
      zyEXQSaXw5H2eO3/OKwurpEgEQ14W5sJZmIuyWyAIuAFMFEHqFdL1DtDri8FdJGKl4AQa0HT
      rSf+JMF8Lkq70yGd9PiNpaS0+QArlBmdNveS8f8B8OjYvRjhfwsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='wins against other teams' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='yearly matches' width='192'>
      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
      EtimBgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
